(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    226697,       5901]
NotebookOptionsPosition[    214339,       5534]
NotebookOutlinePosition[    219203,       5669]
CellTagsIndexPosition[    219104,       5663]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
\[Psi]-Epistemic Model of 2-Qubit Stabilizer Formalism: A Finite-State \
Machine Representation\
\>", "Title",
 CellChangeTimes->{{3.743421152547245*^9, 3.743421184810938*^9}, {
   3.7434218948887672`*^9, 3.743421989141724*^9}, 3.7434274109268556`*^9, {
   3.743498981906127*^9, 3.7434990476922207`*^9}, {3.7437919154533834`*^9, 
   3.7437919569133883`*^9}, {3.74819150025883*^9, 3.74819152155655*^9}, {
   3.748191575369775*^9, 3.748191709420581*^9}, {3.748193147634209*^9, 
   3.748193232434988*^9}, {3.748193312085971*^9, 3.748193315778696*^9}, {
   3.7482065404749556`*^9, 3.7482065406948214`*^9}}],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.7481940143335953`*^9, 3.7481940257645574`*^9}, {
  3.748210118492257*^9, 3.7482101213331113`*^9}}],

Cell[TextData[{
 "In this Mathematica script we provide a code to construct a graphical \
representation of the \[Psi]-epistemic model of the 2-qubit stabilizer \
formalism. All core functional code is contained in the sections below. \
However, for ease of use a main setup script is included in the final \
section, which will initialise all the code and hide it (hint: for a new \
mathematica user run a cell by selecting it and pressing \
\[OpenCurlyDoubleQuote]shift+enter\[CloseCurlyDoubleQuote]). We have opted \
for this approach over initialization cells to improve compatibility.\n\nThe \
general functionality of the code is to allow a user to input a specified \
Clifford circuit (which can contain adaptive measurements and gates) and be \
given an output representing the model\[CloseCurlyQuote]s evolution under the \
circuit. To demonstrate this we have provided 4 examples that capture most of \
the codes capabilities. The specification of the circuit input is given in \
the ",
 StyleBox["circuit parser",
  FontSlant->"Italic"],
 " section.\n\nFinally functionality is provided to give a graphical \
representation of the 2-qubit model. The representation we have chosen is \
that of a finite-state machine. A finite-state machine can be thought of as a \
box with certain internal parameter settings, with any operation dependent \
only on the internal parameters of the machine. For example, a box with a \
series of lights representing whether an internal state is zero or one. A \
description of the graphical representation is given in the ",
 StyleBox["graphical plotting functions",
  FontSlant->"Italic"],
 " section."
}], "Text",
 CellChangeTimes->{{3.7481940275404625`*^9, 3.748194088404027*^9}, {
  3.748210123390189*^9, 3.748210124601529*^9}, {3.7494022151210175`*^9, 
  3.7494028249708233`*^9}, {3.750440860047241*^9, 3.750440881733383*^9}, {
  3.750440912261836*^9, 3.750440953992258*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Global Variable Definitions", "Section",
 CellChangeTimes->{{3.7481933192875357`*^9, 3.7481933387075768`*^9}, {
  3.7481934857955327`*^9, 3.748193489689134*^9}, {3.748193533806967*^9, 
  3.7481935342976646`*^9}}],

Cell["\<\
This section contains all the global variable definitions. Such as color of \
the cells in the graphical representation.\
\>", "Text",
 CellChangeTimes->{{3.7481935350931745`*^9, 3.7481935852912626`*^9}}],

Cell[CellGroupData[{

Cell["Graphical Representation Variables", "Subsection",
 CellChangeTimes->{{3.7481934910942698`*^9, 3.7481935047798433`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Create", " ", "corner", " ", 
     RowBox[{"(", 
      RowBox[{"lower", "-", "left"}], ")"}], " ", "co"}], "-", "ords"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"CornerCoords", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"0.0", "+", 
          RowBox[{"0.25", "*", 
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"i", ",", "4", ",", "2"}], "]"}], "\[LeftDoubleBracket]",
             "2", "\[RightDoubleBracket]"}]}]}], ",", 
         RowBox[{"0.75", "-", 
          RowBox[{"0.25", "*", 
           RowBox[{
            RowBox[{"IntegerDigits", "[", 
             RowBox[{"i", ",", "4", ",", "2"}], "]"}], "\[LeftDoubleBracket]",
             "1", "\[RightDoubleBracket]"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", "15"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Parameter", " ", "to", " ", "create", " ", "white", " ", "space"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d", " ", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Create", " ", "rectangle", " ", "co"}], "-", "ordinates"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RectCoords", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cor", " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{"d", ",", "d"}], "}"}]}], ",", 
         RowBox[{"Cor", "+", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0.25", "-", "d"}], ",", 
            RowBox[{"0.25", "-", "d"}]}], "}"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Cor", ",", "CornerCoords"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Colors", " ", "to", " ", "for", " ", "squares"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ZeroC", " ", "=", " ", 
     RowBox[{"RGBColor", "[", "\"\<#29AB87\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"OneC", " ", "=", " ", 
     RowBox[{"RGBColor", "[", "\"\<#0F52BA\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Pauli", " ", "Symbols"}], " ", "-", " ", 
      RowBox[{"best", " ", "I", " ", "can", " ", "do"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "trying", " ", "to", " ", "use", " ", "latex", " ", "was", " ", "kind", 
       " ", "of", " ", 
       RowBox[{"impossible", ".", " ", "For"}], " ", "publication", " ", 
       "use", " ", "image", " ", "post"}], "-", "processing"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PauliText", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<II\>\"", ",", "TeXForm", ",", "HoldForm"}], "]"}], 
           ",", "Large"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.125", ",", "1.125"}], "}"}]}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<IZ\>\"", ",", "TeXForm", ",", "HoldForm"}], "]"}], 
           ",", "Large"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.375", ",", "1.125"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<IX\>\"", ",", "TeXForm", ",", "HoldForm"}], "]"}], 
           ",", "Large"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.625", ",", "1.125"}], "}"}]}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<IY\>\"", ",", "TeXForm", ",", "HoldForm"}], "]"}], 
           ",", "Large"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.875", ",", "1.125"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<II\>\"", ",", "TeXForm", ",", "HoldForm"}], "]"}], 
           ",", "Large"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.125"}], ",", "0.875"}], "}"}]}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<ZI\>\"", ",", "TeXForm", ",", "HoldForm"}], "]"}], 
           ",", "Large"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.125"}], ",", "0.625"}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<XI\>\"", ",", "TeXForm", ",", "HoldForm"}], "]"}], 
           ",", "Large"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.125"}], ",", "0.375"}], "}"}]}], "]"}], ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", 
            RowBox[{"\"\<YI\>\"", ",", "TeXForm", ",", "HoldForm"}], "]"}], 
           ",", "Large"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.125"}], ",", "0.125"}], "}"}]}], "]"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Dividing", " ", "Lines", " ", "for", " ", "figures"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DividingLines", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.25", ",", "0.0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "1.25"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "1.25"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.75", ",", "0.0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.75", ",", "1.25"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.25"}], ",", "0.25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.0", ",", "0.25"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.25"}], ",", "0.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.0", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.25"}], ",", "0.75"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.0", ",", "0.75"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.25"}], ",", "1.0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.0", ",", "1.0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.0", ",", "0.0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.0", ",", "1.25"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DividingLinesRaw", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.25", ",", "0.0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.25", ",", "1.0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.5", ",", "0.0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.5", ",", "1.0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.75", ",", "0.0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.75", ",", "1.0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.0", ",", "0.25"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.0", ",", "0.25"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.0", ",", "0.5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.0", ",", "0.5"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Gray", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.0", ",", "0.75"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1.0", ",", "0.75"}], "}"}]}], "}"}], "]"}]}], "}"}]}], 
      "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7481931437246175`*^9, 3.748193151335931*^9}, {
   3.7481933425891867`*^9, 3.748193344342107*^9}, {3.7481935075451393`*^9, 
   3.748193510310436*^9}, 3.7481944421262093`*^9, {3.7481953364348807`*^9, 
   3.7481953404803886`*^9}, {3.7482100226171193`*^9, 
   3.7482100510250697`*^9}, {3.748210540649378*^9, 3.748210545114225*^9}, {
   3.7489929043393173`*^9, 3.7489929051658087`*^9}, {3.7494028456731315`*^9, 
   3.749402847154736*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]],

Cell[CellGroupData[{

Cell["Generic Variables", "Subsection",
 CellChangeTimes->{{3.748195309058738*^9, 3.7481953295211377`*^9}},
 CellTags->"SubHeader"],

Cell["\<\
Note: Some variables have dependancies on later code. To prevent errors \
ensure those containing cells have been initialized.\
\>", "Text",
 CellChangeTimes->{{3.7482020122566667`*^9, 3.7482020496046677`*^9}, {
  3.749402885493926*^9, 3.7494028907740993`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "These", " ", "tuples", " ", "define", " ", "the", " ", "binary", " ", 
     "locations", " ", "in", " ", "the", " ", 
     RowBox[{"square", ".", " ", "I", ".", "e", ".", " ", "top"}], " ", "row",
      " ", "is", " ", "0"}], ",", "1", ",", "2", ",", 
    RowBox[{"3", " ", "and", " ", "last", " ", "row", " ", "12"}], ",", "13", 
    ",", "14", ",", 
    RowBox[{"15", " ", "\[Rule]", " ", 
     RowBox[{"top", " ", 
      RowBox[{"row", ":", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], " ", "last", " ", 
     RowBox[{"row", ":", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ProjPauliTups", "=", 
     RowBox[{"Tuples", " ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "4"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Projective", " ", 
     RowBox[{"Pauli", "'"}], "s", " ", "in", " ", "BS", " ", "notation"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ProjPauliBS", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Tup2BS", "[", "P", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"P", ",", "ProjPauliTups"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Index", " ", 
     RowBox[{"reference", ":", " ", 
      RowBox[{"1", "-", 
       RowBox[{"II", " ", "2"}], "-", 
       RowBox[{"IZ", " ", "3"}], "-", 
       RowBox[{"IX", " ", "4"}], "-", 
       RowBox[{"IY", " ", "5"}], "-", 
       RowBox[{"ZI", " ", "6"}], "-", 
       RowBox[{"ZZ", " ", "7"}], "-", 
       RowBox[{"ZX", " ", "8"}], "-", 
       RowBox[{"ZY", " ", "9"}], "-", 
       RowBox[{"XI", " ", "10"}], "-", 
       RowBox[{"XZ", " ", "11"}], "-", 
       RowBox[{"XX", " ", "12"}], "-", 
       RowBox[{"XY", " ", "13"}], "-", 
       RowBox[{"YI", " ", "14"}], "-", 
       RowBox[{"YZ", " ", "15"}], "-", 
       RowBox[{"YX", " ", "16"}], "-", "YY"}]}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "A", " ", "list", " ", "of", " ", "Projective", " ", "Pauli", " ", 
     "operators", " ", "as", " ", "strings"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"ProjPauliStr", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<II\>\"", ",", "\"\<IX\>\"", ",", "\"\<IY\>\"", ",", "\"\<IZ\>\"", 
       ",", "\[IndentingNewLine]", "\t\t\t\t", "\"\<XI\>\"", ",", 
       "\"\<XX\>\"", ",", "\"\<XY\>\"", ",", "\"\<XZ\>\"", ",", 
       "\[IndentingNewLine]", "\t\t\t\t", "\"\<YI\>\"", ",", "\"\<YX\>\"", 
       ",", "\"\<YY\>\"", ",", "\"\<YZ\>\"", ",", "\[IndentingNewLine]", 
       "\t\t\t\t", "\"\<ZI\>\"", ",", "\"\<ZX\>\"", ",", "\"\<ZY\>\"", ",", 
       "\"\<ZZ\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Dictionary", " ", "for", " ", "Pauli", " ", "string", " ", "to", " ", 
     "BS", " ", "Rep"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PauliDict", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<II\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], ",", 
       RowBox[{"\"\<IX\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<IY\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}]}], ",", 
       RowBox[{"\"\<IZ\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<XI\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], ",", 
       RowBox[{"\"\<XX\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<XY\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}]}], ",", 
       RowBox[{"\"\<XZ\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<YI\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}]}], ",", 
       RowBox[{"\"\<YX\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<YY\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}]}], ",", 
       RowBox[{"\"\<YZ\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<ZI\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}]}], ",", 
       RowBox[{"\"\<ZX\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<ZY\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}]}], ",", 
       RowBox[{"\"\<ZZ\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}]}]}], 
      "\[IndentingNewLine]", "\t\t\t", "|>"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Dictionary", " ", "of", " ", "Clifford", " ", "Evolution", " ", 
      "Functions"}], " ", "-", " ", 
     RowBox[{"note", " ", "output", " ", "is", " ", "a", " ", "function"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CliffordDict", " ", "=", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<II\>\"", "\[Rule]", " ", "GammaId"}], ",", 
       RowBox[{"\"\<IX\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<IY\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<IZ\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<XI\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<XX\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<XY\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<XZ\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<YI\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<YX\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<YY\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<YZ\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<ZI\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ZX\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<ZY\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ZZ\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaP", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<IH\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaH", "[", 
           RowBox[{"2", ",", "l"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<HI\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaH", "[", 
           RowBox[{"1", ",", "l"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<IS\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaS", "[", 
           RowBox[{"2", ",", "l"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<SI\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaS", "[", 
           RowBox[{"1", ",", "l"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<CNOT12\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaCNOT", "[", 
           RowBox[{"1", ",", "2", ",", "l"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<CNOT21\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaCNOT", "[", 
           RowBox[{"2", ",", "1", ",", "l"}], "]"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<CZ\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"GammaCZRedux", "[", "l", "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\t\t\t", "|>"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Dictionary", " ", "of", " ", "Measurement", " ", "Update", " ", 
      "Functions"}], " ", "-", " ", 
     RowBox[{"note", " ", "output", " ", "is", " ", "a", " ", "function"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MmtDict", " ", "=", " ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<II\>\"", "\[Rule]", " ", "GammaId"}], ",", 
       RowBox[{"\"\<IX\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<IY\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<IZ\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<XI\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<XX\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<XY\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<XZ\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<YI\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<YX\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<YY\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<YZ\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<ZI\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ZX\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
       RowBox[{"\"\<ZY\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ZZ\>\"", "\[Rule]", " ", 
        RowBox[{"Function", "[", 
         RowBox[{"l", ",", 
          RowBox[{"OnticMeasurementUpdate", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", "0"}], "}"}], ",", "l"}], 
           "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "\t\t", "|>"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.748195384823094*^9, 3.74819538679488*^9}, {
  3.748196633707304*^9, 3.7481966340381002`*^9}, {3.748201534050994*^9, 
  3.7482015571247835`*^9}, {3.748202082938141*^9, 3.7482020999536624`*^9}, {
  3.7489892946418953`*^9, 3.748989332293878*^9}, {3.7489899649422874`*^9, 
  3.748990008041747*^9}, {3.7494028998549566`*^9, 3.7494029413302083`*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generic Functions", "Section",
 CellChangeTimes->{{3.7481954089202576`*^9, 3.748195418543329*^9}}],

Cell["\<\
This section contains generic functions to map between different \
representations of Pauli operators. 

The first is an index over the Pauli group (below) which is then converted to \
a 4 bit binary vector. This vector we refer to as the tuple representation, \
we use this as it is easy to switch between the tuple and index \
representation. 

Index reference: 1<->II, 2<->IZ, 3<->IX, 4<->IY, 5<->ZI, 6<->ZZ, 7<->ZX, \
8<->ZY, 9<->XI, 10<->XZ, 11<->XX, 12<->XY, 13<->YI, 14<->YZ, 15<->YX, 16<->YY

We also provide function here to switch between the tuple and index \
representations to the binary-sympletic representation (described in the \
stabilizer state preparation section).\
\>", "Text",
 CellChangeTimes->{{3.7505613899245744`*^9, 3.750561563721354*^9}, {
  3.7505616348394814`*^9, 3.7505617142844715`*^9}}],

Cell[CellGroupData[{

Cell["Index-2-Tuple-2-Binary Symplectic Representation Maps", "Subsection",
 CellChangeTimes->{{3.7481955638857784`*^9, 3.7481955992839875`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Functions", " ", "to", " ", "convert", " ", "between", " ", "tuple", " ", 
    "and", " ", "BS", " ", "rep"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Tup2BS", "[", "Tup_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "Tup", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "Tup", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "Tup", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "Tup", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
        "}"}], ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BS2Tup", "[", "BS_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"BS", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
        RowBox[{"BS", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
        RowBox[{"BS", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
        RowBox[{"BS", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "map", " ", "a", " ", "Tup", " ", "or", " ", 
     "BS", " ", "Rep", " ", "to", " ", "an", " ", "index"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R2I", "[", "A_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "A", "]"}], "\[Equal]", "3"}], ",", 
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"BS2Tup", "[", "A", "]"}], ",", "2"}], "]"}], "+", "1"}], 
      ",", 
      RowBox[{
       RowBox[{"FromDigits", "[", 
        RowBox[{"A", ",", "2"}], "]"}], "+", "1"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "map", " ", "a", " ", "Index", " ", "to", " ",
      "a", " ", "Tup"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"I2T", "[", "I_", "]"}], ":=", " ", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"I", "-", "1"}], ",", "2", ",", "4"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7481954402339706`*^9, 3.7481954612940025`*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graphical Plotting Functions", "Section",
 CellChangeTimes->{{3.748195427315936*^9, 3.74819543211697*^9}, {
  3.7494029920127544`*^9, 3.7494029930536814`*^9}}],

Cell["\<\
In this section we provide function to plot the representation of an ontic \
state. To do so we arrange a 4x4 grid with each axis representing a local \
Pauli operator, as follows;

II\tIX\tIZ\tIY

XI\tXX\tXZ\tXY

ZI\tZX\tZZ\tZY

YI\tYX\tYZ\tYY

The colour of a cell represents whether the value assignment for a given \
Pauli operator is 0 or 1 (default is green=0, blue =1). The black dot in a \
cell indicates which Pauli Operator the Pauli component of the ontology is \
equal to.

There are two provided plotting functions;

FiniteStatePauli -> Plots the finite machine representation with Pauli \
operators indexing the axes.
FiniteStateRaw -> Plots the raw finite state machine representation.

Both take as arguments a list of lambdas, {\[Lambda]_0,\[Lambda]_1, \
\[Lambda]_2,...}, and output a respectively ordered list of the finite state \
machine\[CloseCurlyQuote]s representation for each lambda.\
\>", "Text",
 CellChangeTimes->{{3.749402997535433*^9, 3.7494030273153224`*^9}, {
  3.7494031243018074`*^9, 3.7494032542778993`*^9}, {3.749403418514412*^9, 
  3.749403489181467*^9}, {3.749523669792844*^9, 3.7495236723280673`*^9}, {
  3.750441005841852*^9, 3.750441032189085*^9}, {3.750542750633939*^9, 
  3.750542785855211*^9}, {3.7505583946771984`*^9, 3.7505583965620375`*^9}, {
  3.7505599843137045`*^9, 3.7505601447657194`*^9}, {3.750794032719681*^9, 
  3.75079403753972*^9}}],

Cell[CellGroupData[{

Cell["Finite-State Machine Representation Plotting Functions", "Subsection",
 CellChangeTimes->{{3.748195642577325*^9, 3.748195653830393*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Function", " ", "to", " ", "parse", " ", "what", " ", "colours", " ", 
     "to", " ", "apply", " ", "to", " ", "squares", " ", "given", " ", 
     "ontic", " ", "state"}], " ", "-", " ", 
    RowBox[{
    "Border", " ", "indicates", " ", "Projective", " ", "Pauli", " ", 
     "location"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"RectProperties", "[", 
      RowBox[{"ontic_", ",", "ind_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Piecewise", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"OneC", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "ontic", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
               "\[LeftDoubleBracket]", "ind", "\[RightDoubleBracket]"}], "==",
              "1"}]}], "}"}], "}"}], ",", "ZeroC"}], "]"}], ",", 
       RowBox[{"Rectangle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "RectCoords", "\[LeftDoubleBracket]", "ind", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
          RowBox[{
          "RectCoords", "\[LeftDoubleBracket]", "ind", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}]}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Generate", " ", "list", " ", "of", " ", "rectangles"}], " ", 
     "-", " ", 
     RowBox[{
     "note", " ", "this", " ", "is", " ", "mutable", " ", "so", " ", "we", 
      " ", "can", " ", "apply", " ", "individual", " ", "formating", " ", 
      "to", " ", "square", " ", "if", " ", "we", " ", "wish"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"i", ".", "e", ".", " ", "to"}], " ", "demonstrate", " ", 
      "measurement", " ", "update", " ", "procedure"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"RectList", "[", "ontic_", "]"}], ":=", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PLoc", " ", "=", " ", 
        RowBox[{"R2I", "[", 
         RowBox[{
         "ontic", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "]"}]}], ";", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RectProperties", "[", 
           RowBox[{"ontic", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}], "~", "Join", 
        "~", 
        RowBox[{"{", 
         RowBox[{"Disk", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
              "RectCoords", "\[LeftDoubleBracket]", "PLoc", 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}], "+", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0.125", "-", "d"}], ",", 
               RowBox[{"0.125", "-", "d"}]}], "}"}]}], ")"}], ",", "0.070"}], 
          "]"}], "}"}]}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Graphics", " ", "Plotting", " ", 
     RowBox[{"Functions", ":", " ", 
      RowBox[{
       RowBox[{"Input", " ", "List", " ", "of", " ", "lambdas"}], " ", "-", 
       " ", 
       RowBox[{"output", " ", "list", " ", "of", " ", "figures"}]}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FiniteStatePauli", "[", "lambdas_", "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"RectList", "[", "l", "]"}], ",", "PauliText", ",", 
           "DividingLines"}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.25"}], ",", "1.00"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "lambdas"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"FiniteStateRaw", "[", "lambdas_", "]"}], ":=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"RectList", "[", "l", "]"}], ",", "DividingLinesRaw"}], 
          "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.0", ",", "1.00"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1.0"}], "}"}]}], "}"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "lambdas"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQvfBL42LZt68dJ27evApEr31j+Y/r02vHj6LBjNxA
+s6hf2wg+p7NJQ4QHVBrwguizZNLwfTdiCnyIDr5oIUyiP7AfzweRC+LvJUE
ottD3dJBNEu4L5ientOXB6JTYrjzQbT2vOM1IFpE9G8ziF7452wXiC78JNIH
oieIty0A0ZX8z5aB6ONpHdsFQeqNdXeB6D/V3adAtBlv/HkQ/Wv5zasg2kM1
5zqInqzYzyUEpA/I2QqC6Bce/zVAtIqqsx6InrmfxRJEK11YYwOib13OdQLR
63RlXUC0wT1XD7B85Qww/cR+RiiIbvHxCQPRX86cSAbRRgYXwDQAnr+sBg==

  "],
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Stabilizer State Preparation", "Section",
 CellChangeTimes->{{3.7481956889457655`*^9, 3.7481956981031265`*^9}}],

Cell["\<\
The below code deals with stabilizer states: 
A generic input stabilizer state is defined by two generators,\
\>", "Text",
 CellChangeTimes->{{3.748195793973608*^9, 3.7481958240566225`*^9}, {
  3.748195873665073*^9, 3.7481959225109935`*^9}}],

Cell[TextData[{
 "\t\t",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "1"], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["x", 
     RowBox[{"1", ",", 
      SubscriptBox["G", "1"]}]]}], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"2", ",", 
     SubscriptBox["G", "1"]}]], TraditionalForm]]],
 "|",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", 
    RowBox[{"1", ",", 
     SubscriptBox["G", "1"]}]], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", 
    RowBox[{"2", ",", 
     SubscriptBox["G", "1"]}]], TraditionalForm]]],
 "| ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", 
    SubscriptBox["G", "1"]], TraditionalForm]]],
 "), ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["G", "2"], TraditionalForm]]],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["x", 
     RowBox[{"1", ",", 
      SubscriptBox["G", "2"]}]]}], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"2", ",", 
     SubscriptBox["G", "2"]}]], TraditionalForm]]],
 "|",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", 
    RowBox[{"1", ",", 
     SubscriptBox["G", "2"]}]], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", 
    RowBox[{"2", ",", 
     SubscriptBox["G", "2"]}]], TraditionalForm]]],
 "| ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", 
    SubscriptBox["G", "2"]], TraditionalForm]]],
 ")"
}], "InlineFormula",
 CellChangeTimes->{{3.7481958759286785`*^9, 3.7481958781263256`*^9}, {
  3.748195926629706*^9, 3.748195932662773*^9}, {3.7481959680016537`*^9, 
  3.7481961207136135`*^9}}],

Cell["\<\
which follow the usual binary symplectic definitions. 

In code this is represented as a list with 3 elements;\
\>", "Text",
 CellChangeTimes->{
  3.7481959197007236`*^9, {3.74819612649807*^9, 3.7481961283609085`*^9}, {
   3.7481962481981077`*^9, 3.748196258193951*^9}, 3.748196459725395*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gi", " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x_", "1", "_gi"}], ",", 
        RowBox[{"x_", "2", "_gi"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"z_", "1", "_gi"}], ",", 
        RowBox[{"z_", "2", "_gi"}]}], "}"}], ",", "p_gi"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"For", " ", 
    RowBox[{"example", ":", " ", 
     RowBox[{"-", "XZ"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MinusXZ", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "1"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.748196176047538*^9, 3.7481962411384544`*^9}, {
  3.7481963827832613`*^9, 3.7481964396597524`*^9}}],

Cell["", "Text",
 CellChangeTimes->{{3.7505617779447575`*^9, 3.7505619615285025`*^9}}],

Cell[CellGroupData[{

Cell["Stabilizer Group Functions", "Subsection",
 CellChangeTimes->{{3.7481964848669133`*^9, 3.7481964920195327`*^9}},
 CellTags->"SubHeader"],

Cell[TextData[{
 "3 functions are provided in the below;\n\nThe function ",
 StyleBox["BSInner ",
  FontSlant->"Italic"],
 "will take to stabilizer operators and output the binary sympletic inner \
product, which is equal to the usual inner product if it is taken mod 2.\n\n\
The function ",
 StyleBox["BetaFn",
  FontSlant->"Italic"],
 " will compute the beta function between two commuting stabilizer operators \
(the mathematical underpinning of this function is provided in a separate \
write-up).\n\nThe function ",
 StyleBox["stabgroup",
  FontSlant->"Italic"],
 " will take as an argument two generators (in BS form) and generate the \
associated stabilizer group."
}], "Text",
 CellChangeTimes->{{3.7481965858707137`*^9, 3.748196600817522*^9}, 
   3.750561964607604*^9},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "Note", " ", "two", " ", "representations", " ", "of", " ", "BS", " ", 
        RowBox[{"vector", ":", " ", "1"}]}], ")"}], " ", "usual", " ", 
      "given", " ", "above", " ", "2"}], ")"}], " ", "Tuple", " ", 
    RowBox[{"form", ":", " ", 
     RowBox[{"x_", "1", " ", "z_", "1", " ", "x_", "2", " ", "z_", "2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"i", ".", "e", ".", " ", "without"}], " ", "phase", " ", 
         "information"}], " ", "-", " ", 
        RowBox[{"assume", " ", "projective", " ", "Pauli"}]}], ")"}]}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Binary", " ", "sympletic", " ", "inner", " ", "product", " ", 
     RowBox[{"s1", ".", "s2"}]}], " ", "=", " ", 
    RowBox[{
     RowBox[{"s1_x", " ", "s2_z"}], " ", "-", " ", 
     RowBox[{"s2_x", " ", "s1_z"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"BSInner", "[", 
     RowBox[{"s1_", ",", "s2_"}], "]"}], ":=", " ", 
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ".", 
        RowBox[{
        "s2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], " ", 
       "-", " ", 
       RowBox[{
        RowBox[{"s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ".", 
        RowBox[{
        "s1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], ",",
       "4"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BetaFn", "[", 
     RowBox[{"s1_", ",", "s2_"}], "]"}], ":=", 
    RowBox[{"Mod", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"BSInner", "[", 
          RowBox[{"s1", ",", "s2"}], "]"}], " ", "+", " ", 
         RowBox[{"2", "*", 
          RowBox[{"(", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "*", 
               RowBox[{
                RowBox[{
                "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "s1", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "+", 
                 RowBox[{
                  RowBox[{
                  "s2", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}]}], ")"}]}], "+", 
              RowBox[{
               RowBox[{
                RowBox[{
                "s1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "*", 
               RowBox[{
                RowBox[{
                "s2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "s1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "+", 
                 RowBox[{
                  RowBox[{
                  "s2", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}]}], ")"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", 
                RowBox[{
                "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "]"}]}], "}"}]}], "]"}], ")"}]}]}], ")"}], "/", "2"}], ",", 
      "2"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Generate", " ", "stabilizer", " ", "group", " ", "from", " ", "two", 
      " ", "generators"}], ",", " ", 
     RowBox[{
     "note", " ", "error", " ", "thrown", " ", "if", " ", "invalid", " ", 
      RowBox[{"generators", ".", " ", "Also"}], " ", "note", " ", "use", " ", 
      "of", " ", "BSinner", " ", "product", " ", "to", " ", "determine", " ", 
      "\[Beta]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"g_", "1"}], ",", " ", 
        RowBox[{"g_", "2"}]}], ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stabgroup", "[", 
     RowBox[{"g1_", ",", "g2_"}], "]"}], ":=", " ", 
    RowBox[{"Catch", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"OddQ", "[", 
        RowBox[{"BSInner", "[", 
         RowBox[{"g1", ",", "g2"}], "]"}], "]"}], ",", " ", 
       RowBox[{
       "Throw", "[", "\"\<Error: Generators do not commute.\>\"", "]"}], ",", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], ",", "g1", 
           ",", "g2", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
              "g1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "+", 
              RowBox[{
              "g2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             ",", 
             RowBox[{
              RowBox[{
              "g1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "+", 
              RowBox[{
              "g2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             ",", " ", 
             RowBox[{
              RowBox[{
              "g1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              "+", 
              RowBox[{
              "g1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
              "+", 
              RowBox[{"BetaFn", "[", 
               RowBox[{"g1", ",", "g2"}], "]"}]}]}], "}"}]}], "}"}], ",", 
         "2"}], "]"}]}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7481956995112596`*^9, 3.7481957000169477`*^9}, 
   3.7481957311038046`*^9, {3.7481957700393467`*^9, 3.7481957926024523`*^9}, {
   3.748196464339554*^9, 3.7481964662473793`*^9}, {3.748196502438092*^9, 
   3.7481965228565197`*^9}, 3.748196626359828*^9, {3.748196699081045*^9, 
   3.7481967669962225`*^9}, {3.7490936733528605`*^9, 3.749093689306129*^9}, {
   3.749093756597575*^9, 3.749093770981619*^9}, {3.7490938049017925`*^9, 
   3.7490940604712315`*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions to Sample \[Lambda] Given a Stabilizer Group", "Subsection",
 CellChangeTimes->{{3.7481966535380945`*^9, 3.748196680037773*^9}, {
  3.7481967777456036`*^9, 3.7481967835410347`*^9}},
 CellTags->"SubHeader"],

Cell["\<\
SampleLambda will sample a random ontic state from a stabilizer state\
\[CloseCurlyQuote]s support.\
\>", "Text",
 CellChangeTimes->{{3.7481966889742727`*^9, 3.74819669033743*^9}, {
  3.7481967865351906`*^9, 3.7481968339340024`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Sample", " ", "an", " ", "ontic", " ", "state", " ", "from", " ", "a", 
    " ", "given", " ", "stabilizer", " ", 
    RowBox[{"group", "'"}], "s", " ", "ontic", " ", "representation"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ConsistentPhase", "[", "SG_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"gamma", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomInteger", "[", "1", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"gamma", "\[LeftDoubleBracket]", 
          RowBox[{"R2I", "[", "s", "]"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{
         "s", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "SG"}], "}"}]}], "]"}], ";", "gamma"}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"NOTE", ":", " ", 
      RowBox[{
       RowBox[{
       "only", " ", "identity", " ", "preparation", " ", "should", " ", 
        "have"}], " ", "|", "S", "|"}]}], "=", "1"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SampleLambda", "[", "S_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "S", "]"}], ">", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"BS2Tup", "[", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{"S", "\[LeftDoubleBracket]", 
           RowBox[{"2", ";;", "4"}], "\[RightDoubleBracket]"}], "]"}], "]"}], 
        ",", 
        RowBox[{"ConsistentPhase", "[", "S", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"I2T", "[", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", "16"}], "}"}], "]"}], "]"}], ",", 
        RowBox[{"ConsistentPhase", "[", "S", "]"}]}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7481966917715473`*^9, 3.748196700653078*^9}, {
  3.748350792801217*^9, 3.748350835920681*^9}, {3.748350936406106*^9, 
  3.748350949381116*^9}, {3.748351033884801*^9, 3.7483510462222033`*^9}, {
  3.748351091733862*^9, 3.748351101104091*^9}, {3.7483511805461206`*^9, 
  3.7483511822390776`*^9}, {3.748354754549903*^9, 3.748354771661933*^9}, {
  3.7507782357910323`*^9, 3.7507782439448013`*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clifford Operations", "Section",
 CellChangeTimes->{{3.748196843370191*^9, 3.7481968548681107`*^9}, {
  3.748196900865565*^9, 3.7481969082380247`*^9}}],

Cell["\<\
Section implements Clifford evolution maps. Note: Some Clifford operation are \
implemented as sequences of previously defined Clifford operations.\
\>", "Text",
 CellChangeTimes->{{3.748196915285684*^9, 3.748196975908354*^9}, {
  3.74819706202785*^9, 3.748197074005473*^9}}],

Cell[CellGroupData[{

Cell["Hard-coded Clifford Operations", "Subsection",
 CellChangeTimes->{{3.7481969832528296`*^9, 3.7481969961598806`*^9}}],

Cell["\<\
The directly coded maps are as follows:

Single Qubit gates - Paulis, Hadamard, Phase
Two Qubit gates - CNOT1\[Rule]2,CNOT2\[Rule]1 (one function)

Note: GammaH, GammaS etc could all be rolled into a generic function, but \
separately is easier to address.

All maps take in an ontic state as argument and output the resultant ontic \
state. Additionally the Pauli map takes in a Pauli operator as an argument \
and the CNOT map takes in control arguments (first - control, second - \
target).\
\>", "Text",
 CellChangeTimes->{{3.748197712139023*^9, 3.748197806099162*^9}, 
   3.749523711433541*^9, {3.7505620394314814`*^9, 3.7505621187135725`*^9}}],

Cell[CellGroupData[{

Cell["Pauli (P) Gate Functions", "Subsubsection",
 CellChangeTimes->{{3.7481978577513533`*^9, 3.7481978967223577`*^9}, {
  3.7481979939994507`*^9, 3.7481979946210675`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Input", ":", " ", 
     RowBox[{"Pauli", " ", "in", " ", "BS", " ", "rep"}]}], " ", ",", " ", 
    RowBox[{"lambda", ".", "\[IndentingNewLine]", " ", 
     RowBox[{"Output", ":", " ", 
      RowBox[{"new", " ", "lambda"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GammaId", "[", "lambda_", "]"}], ":=", " ", "lambda"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GammaP", "[", 
     RowBox[{"P_", ",", "lambda_"}], "]"}], ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lambdap", "=", "lambda"}], ";", " ", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "lambdap", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "=", 
         RowBox[{"Mod", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
              "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "+", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"EvenQ", "[", 
               RowBox[{"BSInner", "[", 
                RowBox[{"P", ",", 
                 RowBox[{"Tup2BS", "[", 
                  RowBox[{"I2T", "[", "i", "]"}], "]"}]}], "]"}], "]"}], ",", 
              "0", ",", "1"}], "]"}]}], ",", "2"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "lambdap"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.7481970342149773`*^9, {3.748197678230903*^9, 3.748197717683609*^9}, 
   3.7481977549626513`*^9, {3.7481978100237455`*^9, 3.7481978289400964`*^9}, 
   3.7481978673804245`*^9, {3.7481979511608315`*^9, 3.7481979737199397`*^9}, {
   3.7481980190410304`*^9, 3.7481980203012543`*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]],

Cell[CellGroupData[{

Cell["Hadamard (H) Gate Functions", "Subsubsection",
 CellChangeTimes->{{3.7481978855032635`*^9, 3.748197892997652*^9}, {
  3.7481979901967926`*^9, 3.748197990933339*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Input", ":", " ", 
     RowBox[{"qubit", " ", "1", " ", "or", " ", "2"}]}], ",", " ", 
    RowBox[{"lambda", ".", "\[IndentingNewLine]", " ", 
     RowBox[{"Output", ":", " ", 
      RowBox[{"new", " ", "lambda"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Hadamard", " ", "in", " ", "Binary"}], "-", 
    RowBox[{"Symplectic", " ", "Rep"}], " ", "+", " ", 
    RowBox[{"Tup", " ", "Rep"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"HBS", "[", 
     RowBox[{"i_", ",", "S_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sout", "=", "S"}], ";", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Sout", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "=", " ", 
       RowBox[{
        RowBox[{"S", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ";", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Sout", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "=", 
       RowBox[{
        RowBox[{"S", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ";", 
      RowBox[{
       RowBox[{"Sout", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
        " ", "=", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"S", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
           "+", 
          RowBox[{
           RowBox[{
            RowBox[{
            "S", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "*", 
           RowBox[{
            RowBox[{
            "S", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}], ",", 
         "2"}], "]"}]}], ";", "Sout"}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HTup", "[", 
     RowBox[{"i_", ",", "S_"}], "]"}], ":=", " ", 
    RowBox[{"BS2Tup", "[", 
     RowBox[{"HBS", "[", 
      RowBox[{"i", ",", 
       RowBox[{"Tup2BS", "[", "S", "]"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Ontological", " ", "Map", " ", "for", " ", "Hadamard", " ", "Gate"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GammaH", "[", 
     RowBox[{"i_", ",", "lambda_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lambdap", "=", "lambda"}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{
       RowBox[{
       "lambdap", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=",
        " ", 
       RowBox[{"HTup", "[", 
        RowBox[{"i", ",", 
         RowBox[{
         "lambda", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "lambdap", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"R2I", "[", 
           RowBox[{"HTup", "[", 
            RowBox[{"i", ",", 
             RowBox[{"I2T", "[", "j", "]"}]}], "]"}], "]"}], 
          "\[RightDoubleBracket]"}], "=", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
              "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], "+", 
            RowBox[{
             RowBox[{"HBS", "[", 
              RowBox[{"i", ",", 
               RowBox[{"Tup2BS", "[", 
                RowBox[{"I2T", "[", "j", "]"}], "]"}]}], "]"}], 
             "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ",", 
           "2"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "16"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t", "lambdap"}], 
     "\[IndentingNewLine]", "\t\t\t\t\t\t", ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.748197955527143*^9, 3.748197962463871*^9}, {
  3.7481980658542023`*^9, 3.7481980755712185`*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]],

Cell[CellGroupData[{

Cell["Phase (S) Gate Functions", "Subsubsection",
 CellChangeTimes->{{3.748197904087819*^9, 3.7481979070659857`*^9}, {
  3.7481979847731333`*^9, 3.7481979853597717`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Input", ":", " ", 
     RowBox[{"qubit", " ", "1", " ", "or", " ", "2"}]}], ",", " ", 
    RowBox[{"lambda", ".", "\[IndentingNewLine]", " ", 
     RowBox[{"Output", ":", " ", 
      RowBox[{"new", " ", "lambda"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Phase", " ", "in", " ", "Binary"}], "-", 
    RowBox[{"Symplectic", " ", "Rep"}], " ", "+", " ", 
    RowBox[{"Tup", " ", "Rep"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SBS", "[", 
     RowBox[{"i_", ",", "S_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sout", "=", "S"}], ";", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Sout", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "S", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "+", 
          RowBox[{
           RowBox[{
           "S", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ",", 
         "2"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"Sout", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
        " ", "=", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"S", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
           "+", 
          RowBox[{
           RowBox[{
            RowBox[{
            "S", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], "*", 
           RowBox[{
            RowBox[{
            "S", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}]}], ",", 
         "2"}], "]"}]}], ";", "Sout"}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"STup", "[", 
     RowBox[{"i_", ",", "S_"}], "]"}], ":=", " ", 
    RowBox[{"BS2Tup", "[", 
     RowBox[{"SBS", "[", 
      RowBox[{"i", ",", 
       RowBox[{"Tup2BS", "[", "S", "]"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Ontological", " ", "Map", " ", "for", " ", "Phase", " ", "Gate"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GammaS", "[", 
     RowBox[{"i_", ",", "lambda_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lambdap", "=", "lambda"}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{
       RowBox[{
       "lambdap", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=",
        " ", 
       RowBox[{"STup", "[", 
        RowBox[{"i", ",", 
         RowBox[{
         "lambda", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "lambdap", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"R2I", "[", 
           RowBox[{"STup", "[", 
            RowBox[{"i", ",", 
             RowBox[{"I2T", "[", "j", "]"}]}], "]"}], "]"}], 
          "\[RightDoubleBracket]"}], "=", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
              "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], "+", 
            RowBox[{
             RowBox[{"SBS", "[", 
              RowBox[{"i", ",", 
               RowBox[{"Tup2BS", "[", 
                RowBox[{"I2T", "[", "j", "]"}], "]"}]}], "]"}], 
             "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ",", 
           "2"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "16"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t", "lambdap"}], 
     "\[IndentingNewLine]", "\t\t\t\t\t\t", ")"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.748197968038438*^9, 3.748197981022443*^9}, {
  3.748198082963667*^9, 3.748198087202056*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]],

Cell[CellGroupData[{

Cell["CNOT (CNOT) Gate Functions", "Subsubsection",
 CellChangeTimes->{{3.7481979143984704`*^9, 3.748197918857724*^9}, {
  3.7481979984177294`*^9, 3.7481980000677147`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Input", ":", " ", "control"}], " ", "=", " ", 
     RowBox[{"a", " ", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}]}], ",", " ", 
    RowBox[{"target", " ", "=", " ", 
     RowBox[{"b", "=", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}]}], ",", " ", 
    RowBox[{"lambda", ".", "\[IndentingNewLine]", " ", 
     RowBox[{"Output", ":", " ", 
      RowBox[{"new", " ", "lambda"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Phase", " ", "in", " ", "Binary"}], "-", 
    RowBox[{"Symplectic", " ", "Rep"}], " ", "+", " ", 
    RowBox[{"Tup", " ", "Rep"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"CNOTBS", "[", 
     RowBox[{"a_", ",", "b_", ",", "S_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sout", "=", "S"}], ";", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Sout", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "b", "\[RightDoubleBracket]"}], "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "S", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "a", "\[RightDoubleBracket]"}], "+", 
          RowBox[{
           RowBox[{
           "S", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "b", "\[RightDoubleBracket]"}]}], ",", 
         "2"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Sout", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", "a", "\[RightDoubleBracket]"}], "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "S", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "a", "\[RightDoubleBracket]"}], "+", 
          RowBox[{
           RowBox[{
           "S", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", "b", "\[RightDoubleBracket]"}]}], ",", 
         "2"}], "]"}]}], ";", 
      RowBox[{
       RowBox[{"Sout", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
        " ", "=", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"S", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
           "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
              "S", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "a", "\[RightDoubleBracket]"}], "*", 
             RowBox[{
              RowBox[{
              "S", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "\[LeftDoubleBracket]", "b", "\[RightDoubleBracket]"}]}], ")"}],
            "*", 
           RowBox[{"(", 
            RowBox[{"Mod", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "S", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "b", "\[RightDoubleBracket]"}], "+", 
               RowBox[{
                RowBox[{
                "S", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "\[LeftDoubleBracket]", "a", "\[RightDoubleBracket]"}], "+", 
               "1"}], ",", "2"}], "]"}], ")"}]}]}], ",", "2"}], "]"}]}], ";", 
      "Sout"}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CNOTTup", "[", 
     RowBox[{"a_", ",", "b_", ",", "S_"}], "]"}], ":=", " ", 
    RowBox[{"BS2Tup", "[", 
     RowBox[{"CNOTBS", "[", 
      RowBox[{"a", ",", "b", ",", 
       RowBox[{"Tup2BS", "[", "S", "]"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Ontological", " ", "Map", " ", "for", " ", "CNOT", " ", "a"}], 
     "\[Rule]", 
     RowBox[{"b", " ", "Gate"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GammaCNOT", "[", 
     RowBox[{"a_", ",", "b_", ",", "lambda_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lambdap", "=", "lambda"}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{
       RowBox[{
       "lambdap", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "=",
        " ", 
       RowBox[{"CNOTTup", "[", 
        RowBox[{"a", ",", "b", ",", 
         RowBox[{
         "lambda", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t\t\t\t\t\t", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
          "lambdap", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"R2I", "[", 
           RowBox[{"CNOTTup", "[", 
            RowBox[{"a", ",", "b", ",", 
             RowBox[{"I2T", "[", "j", "]"}]}], "]"}], "]"}], 
          "\[RightDoubleBracket]"}], "=", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
              "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}], "+", 
            RowBox[{
             RowBox[{"CNOTBS", "[", 
              RowBox[{"a", ",", "b", ",", 
               RowBox[{"Tup2BS", "[", 
                RowBox[{"I2T", "[", "j", "]"}], "]"}]}], "]"}], 
             "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ",", 
           "2"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "16"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t", "lambdap"}], 
     "\[IndentingNewLine]", "\t\t\t\t\t\t", ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.748198025696932*^9, 3.748198032182937*^9}, {
  3.7481980903281317`*^9, 3.7481980992386446`*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Composite Clifford Operations", "Subsection",
 CellChangeTimes->{{3.748198119227337*^9, 3.748198126466877*^9}}],

Cell["\<\
Below are implementations of Clifford operations that can be expressed as \
sequences of the hard-coded operations.\
\>", "Text",
 CellChangeTimes->{{3.7481981301026382`*^9, 3.7481982030257316`*^9}, {
  3.7482718189996624`*^9, 3.748271830870351*^9}}],

Cell[CellGroupData[{

Cell["SWAP Gate", "Subsubsection",
 CellChangeTimes->{{3.748198208909108*^9, 3.7481982094797597`*^9}, {
  3.748198240897941*^9, 3.74819824252294*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "SWAP", " ", "Gate", " ", "we", " ", "simply", " ", "decompose", " ", 
    "into", " ", "CNOTs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GammaSWAP", "[", "lambda_", "]"}], ":=", 
   RowBox[{"GammaCNOT", "[", 
    RowBox[{"1", ",", "2", ",", 
     RowBox[{"GammaCNOT", "[", 
      RowBox[{"2", ",", "1", ",", 
       RowBox[{"GammaCNOT", "[", 
        RowBox[{"1", ",", "2", ",", "lambda"}], "]"}]}], "]"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.748198225746272*^9, 3.748198227256342*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]],

Cell[CellGroupData[{

Cell["CZ Gate (Note: symmetric on control-target)", "Subsubsection",
 CellChangeTimes->{{3.7481982360889025`*^9, 3.7481982611884456`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "CZ", " ", "gates", " ", "formed", " ", "from", " ", "Hadamard", " ", 
     "and", " ", "CNOT", " ", 
     RowBox[{"maps", ".", " ", "Note"}], " ", "CZ12"}], " ", "=", " ", 
    RowBox[{"CZ21", " ", "\[Rule]", " ", 
     RowBox[{
     "generic", " ", "one", " ", "implemented", " ", "if", " ", "we", " ", 
      "generalize", " ", "code", " ", 
      RowBox[{"(", 
       RowBox[{"and", " ", "for", " ", "testing"}], ")"}], " ", "and", " ", 
      "generic", " ", "CZ", " ", "too"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "redux", " ", "a", " ", "control"}], ",", " ", 
    RowBox[{"b", " ", "target"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GammaCZRedux", "[", 
     RowBox[{"a_", ",", "b_", ",", "lambda_"}], "]"}], " ", ":=", " ", 
    RowBox[{"GammaH", "[", 
     RowBox[{"b", ",", 
      RowBox[{"GammaCNOT", "[", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{"GammaH", "[", 
         RowBox[{"b", ",", "lambda"}], "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GammaCZ", "[", "lambda_", "]"}], ":=", " ", 
    RowBox[{"GammaH", "[", 
     RowBox[{"2", ",", 
      RowBox[{"GammaCNOT", "[", 
       RowBox[{"1", ",", "2", ",", 
        RowBox[{"GammaH", "[", 
         RowBox[{"2", ",", "lambda"}], "]"}]}], "]"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7481982648771744`*^9, 3.7481982792308574`*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Measurement Outcome/Measurement Update Rules", "Section",
 CellChangeTimes->{{3.7481982968250227`*^9, 3.74819831316496*^9}}],

Cell[TextData[{
 "In the below we provide the implementation of the measurement update rules.\
\n\nThe core functionality is the provided in the function ",
 StyleBox["OnticMeasurementUpdate",
  FontSlant->"Italic"],
 " which takes as an argument a Pauli observable and ontic state, it then \
outputs the updated ontic state.\n\nAdditionally functionality is provided to \
interrogate the measurement update graphically. See \
\[OpenCurlyDoubleQuote]Circuit Parser Example/Tutorial Code\
\[CloseCurlyDoubleQuote] in the examples section for a full explanation of \
the how this visualization is structured."
}], "Text",
 CellChangeTimes->{{3.7505622152292767`*^9, 3.750562254791867*^9}, {
  3.750562319807283*^9, 3.750562390498665*^9}, {3.7505624695803947`*^9, 
  3.7505624983276625`*^9}}],

Cell[CellGroupData[{

Cell["Implementation of Measurement Update Rules", "Subsection",
 CellChangeTimes->{{3.7481991930691752`*^9, 3.7481992102325068`*^9}},
 CellTags->"SubHeader"],

Cell["Code below will perform measurement update rules.", "Text",
 CellChangeTimes->{{3.74819944387416*^9, 3.748199514088501*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Measurement", " ", 
    RowBox[{"Outcome", ":", " ", 
     RowBox[{"Input", " ", "M", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"either", " ", "BS", " ", "or", " ", "Tuple", " ", "Rep"}], 
        ")"}], "\[IndentingNewLine]", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"note", " ", "BS", " ", "rep", " ", "can", " ", "handle"}], 
         " ", "-", "M"}], " ", "=", " ", 
        RowBox[{
        "classical", " ", "bit", " ", "flip", " ", "on", " ", "mmt", " ", 
         "of", " ", "M"}]}], "]"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MmtOutcome", "[", 
     RowBox[{"M_", ",", "lambda_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "M", "]"}], "\[Equal]", " ", "3"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{
        "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{
         RowBox[{"FromDigits", "[", 
          RowBox[{
           RowBox[{"BS2Tup", "[", "M", "]"}], ",", "2"}], "]"}], "+", "1"}], 
        "\[RightDoubleBracket]"}], "+", 
       RowBox[{"M", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{
       RowBox[{
       "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"FromDigits", "[", 
         RowBox[{"M", ",", "2"}], "]"}], "+", "1"}], 
       "\[RightDoubleBracket]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Selects", " ", "all", " ", "2"}], "-", 
     RowBox[{
     "qubits", " ", "Paulis", " ", "from", " ", "a", " ", "list", " ", "that",
       " ", "commute", " ", "with", " ", 
      RowBox[{"P", ".", " ", "Tup"}], " ", "rep", " ", "input"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GenerateCommutingSubset", "[", 
     RowBox[{"P_", ",", "InG_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Select", "[", 
     RowBox[{"InG", ",", 
      RowBox[{
       RowBox[{"EvenQ", "[", 
        RowBox[{"BSInner", "[", 
         RowBox[{
          RowBox[{"Tup2BS", "[", "#", "]"}], ",", 
          RowBox[{"Tup2BS", "[", "P", "]"}]}], "]"}], "]"}], "&"}]}], "]"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GenerateACommutingSubset", "[", 
     RowBox[{"P_", ",", "InG_"}], "]"}], ":=", " ", 
    RowBox[{"Select", "[", 
     RowBox[{"InG", ",", 
      RowBox[{
       RowBox[{"OddQ", "[", 
        RowBox[{"BSInner", "[", 
         RowBox[{
          RowBox[{"Tup2BS", "[", "#", "]"}], ",", 
          RowBox[{"Tup2BS", "[", "P", "]"}]}], "]"}], "]"}], "&"}]}], "]"}]}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Generate", " ", "Phases", " ", "from", " ", "ontic", " ", "state", " ", 
     "and", " ", "M"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CommutingCase", "[", 
     RowBox[{"M_", ",", "lambda_"}], "]"}], ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lambdap", "=", 
       RowBox[{
       "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ";", " ", "\[IndentingNewLine]", "\t\t\t\t\t\t\t", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"lambdap", "\[LeftDoubleBracket]", 
          RowBox[{"R2I", "[", "S", "]"}], "\[RightDoubleBracket]"}], " ", "=",
          " ", 
         RowBox[{"RandomInteger", "[", "1", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"S", ",", " ", 
          RowBox[{"GenerateACommutingSubset", "[", 
           RowBox[{
            RowBox[{"BS2Tup", "[", "M", "]"}], ",", 
            RowBox[{"GenerateCommutingSubset", "[", 
             RowBox[{
              RowBox[{
              "lambda", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", "ProjPauliTups"}], "]"}]}], 
           "]"}]}], "}"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t\t", 
      RowBox[{
       RowBox[{"lambdap", "\[LeftDoubleBracket]", 
        RowBox[{"R2I", "[", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"BS2Tup", "[", "M", "]"}], "+", 
            RowBox[{
            "lambda", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}]}], ",", "2"}], "]"}], "]"}], 
        "\[RightDoubleBracket]"}], "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"R2I", "[", "M", "]"}], "\[RightDoubleBracket]"}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{
           "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"R2I", "[", 
            RowBox[{
            "lambda", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], "\[RightDoubleBracket]"}], " ", "+", 
          RowBox[{"BetaFn", "[", 
           RowBox[{"M", ",", 
            RowBox[{"Tup2BS", "[", 
             RowBox[{
             "lambda", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
              "]"}]}], "]"}]}], ",", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t\t", "lambdap"}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AntiCommutingCase", "[", 
     RowBox[{"M_", ",", "lambda_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"lambdap", "=", 
       RowBox[{
       "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"lambdap", "\[LeftDoubleBracket]", 
          RowBox[{"R2I", "[", "S", "]"}], "\[RightDoubleBracket]"}], " ", "=",
          " ", 
         RowBox[{"RandomInteger", "[", "1", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"S", ",", " ", 
          RowBox[{"GenerateACommutingSubset", "[", 
           RowBox[{
            RowBox[{"BS2Tup", "[", "M", "]"}], ",", 
            RowBox[{"GenerateCommutingSubset", "[", 
             RowBox[{
              RowBox[{
              "lambda", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", "ProjPauliTups"}], "]"}]}], 
           "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t\t\t", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"lambdap", "\[LeftDoubleBracket]", 
          RowBox[{"R2I", "[", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"BS2Tup", "[", "M", "]"}], "+", "S"}], ",", "2"}], 
            "]"}], "]"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"Mod", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
              "\[LeftDoubleBracket]", 
             RowBox[{"R2I", "[", "M", "]"}], "\[RightDoubleBracket]"}], " ", 
            "+", " ", 
            RowBox[{
             RowBox[{
             "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
              "\[LeftDoubleBracket]", 
             RowBox[{"R2I", "[", "S", "]"}], "\[RightDoubleBracket]"}], " ", 
            "+", 
            RowBox[{"BetaFn", "[", 
             RowBox[{"M", ",", 
              RowBox[{"Tup2BS", "[", "S", "]"}]}], "]"}]}], ",", "2"}], 
          "]"}]}], "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t", ",", 
        RowBox[{"{", 
         RowBox[{"S", ",", 
          RowBox[{"GenerateCommutingSubset", "[", 
           RowBox[{
            RowBox[{"BS2Tup", "[", "M", "]"}], ",", 
            RowBox[{"GenerateCommutingSubset", "[", 
             RowBox[{
              RowBox[{
              "lambda", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", "ProjPauliTups"}], "]"}]}], 
           "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t\t\t", "lambdap"}], ")"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Phase", " ", "function", " ", "update", " ", "function", " ", "takes", 
     " ", "M", " ", "as", " ", "BS", " ", "rep"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PhaseUpdate", "[", 
     RowBox[{"M_", ",", "lambda_"}], "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"EvenQ", "[", 
       RowBox[{"BSInner", "[", 
        RowBox[{"M", ",", 
         RowBox[{"Tup2BS", "[", 
          RowBox[{
          "lambda", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"CommutingCase", "[", 
       RowBox[{"M", ",", "lambda"}], "]"}], ",", 
      RowBox[{"AntiCommutingCase", "[", 
       RowBox[{"M", ",", "lambda"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Takes", " ", "either", " ", "BS", " ", "or", " ", "Tuple", " ", 
     "input"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"OnticMeasurementUpdate", "[", 
     RowBox[{"M_", ",", "lambda_"}], "]"}], ":=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "M", "]"}], "\[Equal]", " ", "3"}], ",", 
        RowBox[{"BS2Tup", "[", "M", "]"}], ",", "M"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PhaseUpdate", "[", 
       RowBox[{"M", ",", "lambda"}], "]"}]}], "\[IndentingNewLine]", 
     "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7481992487242084`*^9, 3.748199261397236*^9}, {
   3.7481994066101065`*^9, 3.7481994080682087`*^9}, {3.749094088464409*^9, 
   3.7490941131861577`*^9}, 3.749094325344088*^9},
 CellTags->{"Core", "SubHeader"}]
}, Closed]],

Cell[CellGroupData[{

Cell["Code to Interrogate Measurement Update Rule", "Subsection",
 CellChangeTimes->{{3.7481992174616947`*^9, 3.7481992359938617`*^9}},
 CellTags->"SubHeader"],

Cell[TextData[{
 "Part of the intention of this code is to highlight how the measurement \
update rules function. This section gives code to dynamically demonstrate how \
the update rule applies. Output is a list of intermediary states in the \
measurement update, list is color coded as follows: \n\t1 - Outcome of \
measurement.\n\t2 - Initial Ontic State.\n\t3 - Measurement Pauli Highlighted \
[Commutation relations highlighted - Thick green = P&M AnitCommute, Dashed \
Green = P&M Commute].\n\t4 - Deterministic Updates Highlighted [Thick Purple \
Border - Fixed Cells, Dashed Purple/Green Border + Opaque - Updated Cells].\n\
\t5 - Random Updates Highlighted [Opaque - Randomized Cells].\n\t6 - Final \
ontic state with all updates performed.\n\nThree functions available for use. \
\n\n",
 StyleBox["UpdateSteps ",
  FontSlant->"Italic"],
 "- Example update given a measurement and ontic state. Input - (Measurement, \
Ontic state)\n\n",
 StyleBox["UpdateStepsCircRaw",
  FontSlant->"Italic"],
 " - Raw graphical representation (i.e. no Pauli axes) of finite state update \
given a circuit . Input - (Circuit, Output of given circuit, integer of k-th \
measurement)\n\n",
 StyleBox["UpdateStepsCircPauli ",
  FontSlant->"Italic"],
 "- As above but with Pauli Axes."
}], "Text",
 CellChangeTimes->{{3.748200348535181*^9, 3.748200385972127*^9}, {
  3.74820047514774*^9, 3.7482004943289194`*^9}, {3.7482006005545034`*^9, 
  3.7482006734775968`*^9}, {3.7482007307783103`*^9, 3.748200872171239*^9}, {
  3.7482009302341957`*^9, 3.7482011714906282`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "and", " ", "highlight", " ", "Measurement", " ", "cell"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LocateMcell", "[", 
     RowBox[{"M_", ",", "lambda_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"G", "=", 
       RowBox[{"RectList", "[", "lambda", "]"}]}], ";", "\[IndentingNewLine]",
       "\t\t\t\t\t\t", 
      RowBox[{"PrependTo", "[", 
       RowBox[{
        RowBox[{"G", "\[LeftDoubleBracket]", 
         RowBox[{"R2I", "[", "M", "]"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"EvenQ", "[", 
           RowBox[{"BSInner", "[", 
            RowBox[{"M", ",", " ", 
             RowBox[{"Tup2BS", "[", 
              RowBox[{
              "lambda", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], "]"}]}], "]"}], "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green", ",", 
             "Dashed"}], "}"}], "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green"}], "}"}], 
           "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"G", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
          RowBox[{"Disk", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"RectCoords", "\[LeftDoubleBracket]", 
                RowBox[{"R2I", "[", "M", "]"}], "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0.125", "-", "d"}], ",", 
                RowBox[{"0.125", "-", "d"}]}], "}"}]}], ")"}], ",", "0.070"}],
            "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t", "G"}], ")"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Find", " ", "and", " ", "hightlight", " ", "deterministic", " ", 
       "updates", " ", "Transparent", " ", "Cell", " ", "indicates", " ", 
       "it", " ", "will", " ", "potentially", " ", "be", " ", "updated"}], 
      "\[IndentingNewLine]", "-", " ", 
      RowBox[{"Commuting", " ", "Case"}]}], ";", " ", 
     RowBox[{
      RowBox[{
      "Black", " ", "and", " ", "Dashed", " ", "Green", " ", "for", " ", 
       "updated", " ", "cells"}], " ", "\[IndentingNewLine]", "-", " ", 
      RowBox[{"AntiCommuting", " ", "Case"}]}], ";", " ", 
     RowBox[{
     "Purple", " ", "for", " ", "Cells", " ", "that", " ", "commute", " ", 
      "with", " ", "P", " ", "and", " ", 
      RowBox[{"M", ".", " ", "Purple"}], " ", "and", " ", "Dashed", " ", 
      "Green", " ", "for", " ", "updated", " ", "cells"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LocateDetUpdates", "[", 
     RowBox[{"M_", ",", "lambda_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"G", " ", "=", " ", 
       RowBox[{"LocateMcell", "[", 
        RowBox[{"M", ",", "lambda"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t\t\t", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"EvenQ", "[", 
         RowBox[{"BSInner", "[", 
          RowBox[{"M", ",", " ", 
           RowBox[{"Tup2BS", "[", 
            RowBox[{
            "lambda", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}]}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        "\t\t\t\t\t\t\t\t", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"PrependTo", "[", 
           RowBox[{
            RowBox[{"G", "\[LeftDoubleBracket]", 
             RowBox[{"R2I", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"BS2Tup", "[", "M", "]"}], "+", 
                 RowBox[{
                 "lambda", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", "2"}], "]"}], "]"}], 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"EdgeForm", "[", 
             RowBox[{"{", 
              RowBox[{"Thickness", "[", "0.01", "]"}], "}"}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"G", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green", ",", 
                 "Dashed"}], "}"}], "]"}], ",", "Transparent", ",", 
              RowBox[{
               RowBox[{"G", "\[LeftDoubleBracket]", 
                RowBox[{"R2I", "[", 
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"BS2Tup", "[", "M", "]"}], "+", 
                    RowBox[{
                    "lambda", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", "2"}], "]"}], "]"}], 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}]}], "}"}]}], "]"}], ";", 
          RowBox[{"PrependTo", "[", 
           RowBox[{
            RowBox[{"G", "\[LeftDoubleBracket]", 
             RowBox[{"R2I", "[", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"BS2Tup", "[", "M", "]"}], "+", 
                 RowBox[{
                 "lambda", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", "2"}], "]"}], "]"}], 
             "\[RightDoubleBracket]"}], ",", 
            RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], ")"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t", 
        RowBox[{"Do", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"PrependTo", "[", 
             RowBox[{
              RowBox[{"G", "\[LeftDoubleBracket]", 
               RowBox[{"R2I", "[", "S", "]"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Purple"}], 
                "}"}], "]"}]}], "]"}], ";", 
            RowBox[{"PrependTo", "[", 
             RowBox[{
              RowBox[{"G", "\[LeftDoubleBracket]", 
               RowBox[{"R2I", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"BS2Tup", "[", "M", "]"}], "+", "S"}], ",", "2"}], 
                 "]"}], "]"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"EdgeForm", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Purple"}], 
                "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
            "\t\t\t\t\t\t\t\t\t", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"G", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"EdgeForm", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green", ",",
                    "Dashed"}], "}"}], "]"}], ",", "Transparent", ",", 
                RowBox[{
                 RowBox[{"G", "\[LeftDoubleBracket]", 
                  RowBox[{"R2I", "[", 
                   RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"BS2Tup", "[", "M", "]"}], "+", "S"}], ",", "2"}],
                     "]"}], "]"}], "\[RightDoubleBracket]"}], 
                 "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
               "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
            "\t\t\t\t\t\t\t\t\t", 
            RowBox[{"PrependTo", "[", 
             RowBox[{
              RowBox[{"G", "\[LeftDoubleBracket]", 
               RowBox[{"R2I", "[", 
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"BS2Tup", "[", "M", "]"}], "+", "S"}], ",", "2"}], 
                 "]"}], "]"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], ")"}], ",", 
          "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{"S", ",", " ", 
            RowBox[{"GenerateCommutingSubset", "[", 
             RowBox[{
              RowBox[{"BS2Tup", "[", "M", "]"}], ",", 
              RowBox[{"GenerateCommutingSubset", "[", 
               RowBox[{
                RowBox[{
                "lambda", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], ",", "ProjPauliTups"}], "]"}]}], 
             "]"}]}], "}"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t\t\t", "G"}], "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Locate", " ", "Cells", " ", "to", " ", "be", " ", "randomized"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LocateRandUpdates", "[", 
     RowBox[{"M_", ",", "lambda_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"G", "=", 
       RowBox[{"LocateDetUpdates", "[", 
        RowBox[{"M", ",", "lambda"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t\t\t", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{"PrependTo", "[", 
         RowBox[{
          RowBox[{"G", "\[LeftDoubleBracket]", 
           RowBox[{"R2I", "[", "S", "]"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"S", ",", 
          RowBox[{"GenerateACommutingSubset", "[", 
           RowBox[{
            RowBox[{"BS2Tup", "[", "M", "]"}], ",", 
            RowBox[{"GenerateCommutingSubset", "[", 
             RowBox[{
              RowBox[{
              "lambda", "\[LeftDoubleBracket]", "1", 
               "\[RightDoubleBracket]"}], ",", "ProjPauliTups"}], "]"}]}], 
           "]"}]}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\t\t\t\t\t\t\t\t", "G"}], "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t", 
     ")"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Legacy", " ", "Code", " ", "to", " ", "demonstrate", " ", "update", " ", 
     "rules"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UpdateSteps", "[", 
     RowBox[{"M_", ",", "lambda_"}], "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
       "lambda", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"R2I", "[", "M", "]"}], "\[RightDoubleBracket]"}], ",", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t\t", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RectList", "[", "lambda", "]"}], ",", "DividingLinesRaw"}],
          "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t\t", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LocateMcell", "[", 
           RowBox[{"M", ",", "lambda"}], "]"}], ",", "DividingLinesRaw"}], 
         "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t\t", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LocateDetUpdates", "[", 
           RowBox[{"M", ",", "lambda"}], "]"}], ",", "DividingLinesRaw"}], 
         "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t\t", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LocateRandUpdates", "[", 
           RowBox[{"M", ",", "lambda"}], "]"}], ",", "DividingLinesRaw"}], 
         "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t\t", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RectList", "[", 
           RowBox[{"OnticMeasurementUpdate", "[", 
            RowBox[{"M", ",", "lambda"}], "]"}], "]"}], ",", 
          "DividingLinesRaw"}], "}"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Extract", " ", "from", " ", "circuit", " ", "simulation", " ", "the", 
     " ", "measurement", " ", "update", " ", "procedure"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UpdateStepsCircRaw", "[", 
     RowBox[{"Circ_", ",", "Output_", ",", "k_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"MmtLoc", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Circ", "\[LeftDoubleBracket]", 
                RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[Equal]", "\"\<M\>\""}], ",", 
             RowBox[{"i", "+", "1"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"Circ", "\[LeftDoubleBracket]", 
               RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], "]"}]}], 
            "}"}]}], "]"}], ",", "Null"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t", 
      RowBox[{"TrueLoc", "=", 
       RowBox[{
       "MmtLoc", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t", 
      RowBox[{"M", " ", "=", " ", 
       RowBox[{"PauliDict", "[", 
        RowBox[{
         RowBox[{
         "Output", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", "TrueLoc", "\[RightDoubleBracket]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Output", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RectList", "[", 
             RowBox[{
              RowBox[{
              "Output", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
              RowBox[{"TrueLoc", "-", "1"}], "\[RightDoubleBracket]"}], "]"}],
             ",", "DividingLinesRaw"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LocateMcell", "[", 
             RowBox[{"M", ",", 
              RowBox[{
               RowBox[{
               "Output", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
               RowBox[{"TrueLoc", "-", "1"}], "\[RightDoubleBracket]"}]}], 
             "]"}], ",", "DividingLinesRaw"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LocateDetUpdates", "[", 
             RowBox[{"M", ",", 
              RowBox[{
               RowBox[{
               "Output", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
               RowBox[{"TrueLoc", "-", "1"}], "\[RightDoubleBracket]"}]}], 
             "]"}], ",", "DividingLinesRaw"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LocateRandUpdates", "[", 
             RowBox[{"M", ",", 
              RowBox[{
               RowBox[{
               "Output", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
               RowBox[{"TrueLoc", "-", "1"}], "\[RightDoubleBracket]"}]}], 
             "]"}], ",", "DividingLinesRaw"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RectList", "[", 
             RowBox[{
              RowBox[{
              "Output", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "TrueLoc", 
              "\[RightDoubleBracket]"}], "]"}], ",", "DividingLinesRaw"}], 
           "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], "}"}]}], 
     ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UpdateStepsCircPauli", "[", 
     RowBox[{"Circ_", ",", "Output_", ",", "k_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"MmtLoc", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Circ", "\[LeftDoubleBracket]", 
                RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], 
               "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[Equal]", "\"\<M\>\""}], ",", 
             RowBox[{"i", "+", "1"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"Circ", "\[LeftDoubleBracket]", 
               RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], "]"}]}], 
            "}"}]}], "]"}], ",", "Null"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t", 
      RowBox[{"TrueLoc", "=", 
       RowBox[{
       "MmtLoc", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
      ";", "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t", 
      RowBox[{"M", " ", "=", " ", 
       RowBox[{"PauliDict", "[", 
        RowBox[{
         RowBox[{
         "Output", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", "TrueLoc", "\[RightDoubleBracket]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
         "Output", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RectList", "[", 
             RowBox[{
              RowBox[{
              "Output", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
              RowBox[{"TrueLoc", "-", "1"}], "\[RightDoubleBracket]"}], "]"}],
             ",", "PauliText", ",", "DividingLines"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.25"}], ",", "1.00"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LocateMcell", "[", 
             RowBox[{"M", ",", 
              RowBox[{
               RowBox[{
               "Output", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
               RowBox[{"TrueLoc", "-", "1"}], "\[RightDoubleBracket]"}]}], 
             "]"}], ",", "PauliText", ",", "DividingLines"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.25"}], ",", "1.00"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LocateDetUpdates", "[", 
             RowBox[{"M", ",", 
              RowBox[{
               RowBox[{
               "Output", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
               RowBox[{"TrueLoc", "-", "1"}], "\[RightDoubleBracket]"}]}], 
             "]"}], ",", "PauliText", ",", "DividingLines"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.25"}], ",", "1.00"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"LocateRandUpdates", "[", 
             RowBox[{"M", ",", 
              RowBox[{
               RowBox[{
               "Output", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", 
               RowBox[{"TrueLoc", "-", "1"}], "\[RightDoubleBracket]"}]}], 
             "]"}], ",", "PauliText", ",", "DividingLines"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.25"}], ",", "1.00"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\t\t\t\t\t\t\t\t\t\t\t", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"RectList", "[", 
             RowBox[{
              RowBox[{
              "Output", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "TrueLoc", 
              "\[RightDoubleBracket]"}], "]"}], ",", "PauliText", ",", 
            "DividingLines"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.25"}], ",", "1.00"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}]}], 
       "}"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7482004404241133`*^9, 3.748200472628282*^9}, {
  3.7482005028366795`*^9, 3.7482005032684126`*^9}, {3.7482008803721895`*^9, 
  3.748200881432537*^9}, {3.7507979579578514`*^9, 3.7507980726598616`*^9}, {
  3.750798151984101*^9, 3.7507981540168514`*^9}, {3.750798199768727*^9, 
  3.7507982033335357`*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Circuit Parser", "Section",
 CellChangeTimes->{{3.7482013663856106`*^9, 3.748201369786516*^9}}],

Cell[TextData[{
 StyleBox["Overview:",
  FontWeight->"Bold"],
 "\nThe code in this section is designed parse an input stabilizer circuit \
and output a list of outcomes and a history of the ontic state.\nThe input is \
broken down into blocks - each block represents a preparation then choice of \
mmt or transformation (possibly adaptive);\n\t0th input \[Rule] Preparation: \
{List[Stabilizer groups],OPTIONAL:List[Weights to sample stabilizer groups]} \
- If no weights provided uniform randomly weights will be used.\n\t\n\t\t\t\t\
\t  Ex: Sample Computational basis with  \
P(00)=0.5,P(01)=0.2,P(10)=0.2,P(11)=0.1\n\t\t\t\t\t\t\t\[Rule] {\n\t\t\t\t\t\t\
\t\t{ {\[OpenCurlyDoubleQuote]IZ\[CloseCurlyDoubleQuote],\
\[CloseCurlyDoubleQuote]ZI\[CloseCurlyDoubleQuote]},{\[OpenCurlyDoubleQuote]-\
IZ\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]ZI\[CloseCurlyDoubleQuote]}\
,{\[OpenCurlyDoubleQuote]IZ\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]-\
ZI\[CloseCurlyDoubleQuote]},{\[OpenCurlyDoubleQuote]-IZ\
\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]-ZI\[CloseCurlyDoubleQuote]} \
},\n\t\t\t\t\t\t\t\t{0.5,0.2,0.2,0.1}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\
ith input \[Rule] Choice of Transformation or Meausurement: {Choice(\
\[OpenCurlyDoubleQuote]T\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]M\
\[CloseCurlyDoubleQuote]), Adaptive(True/False), \
[Adaptive=False\[Rule]OperationToImplement(Clifford,Pauli Obs), \n\t\t\t\t\t\t\
\t\t\t\t\t\t\t\t\tAdapative=True\[Rule]ListofConditionalOperations]}\n\n\
Operations string input: Paulis - \[OpenCurlyDoubleQuote]P_1P_2\
\[CloseCurlyDoubleQuote] (i.e. \[OpenCurlyDoubleQuote]XX\
\[CloseCurlyDoubleQuote],\[CloseCurlyDoubleQuote]IZ\[CloseCurlyDoubleQuote]),\
\n\t\t\t     Cliffords - \[OpenCurlyDoubleQuote]IH\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]HI\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]IS\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]SI\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]CNOT12\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]CNOT21\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]CZ  \nOPTIONAL: random operations - weighting can be \
applied as in preparation case.\n\nApdative structure is as follows: { \
DefaultOperationList,  \n\t\t\t\t\t{{k_i\[CloseCurlyQuote]s to condtion \
on},{outcomes to condition on},{Operation list}}, \n\t\t\t\t\t...}}\nNote: \
Operation list can include weightings as usual.\n\nFor example: {\
\[OpenCurlyDoubleQuote]II\[CloseCurlyDoubleQuote], {\n\t\t\t{{1,2}, {0,0}, \
\[OpenCurlyDoubleQuote]IH\[CloseCurlyDoubleQuote]},\n\t\t\t{{3},{1}, \
\[OpenCurlyDoubleQuote]SI\[CloseCurlyDoubleQuote]}\n\t\t\t}}\nWill as a \
default apply the identity operation, otherwise if measurement 1 and 2\
\[CloseCurlyQuote]s outcome were both 0 it will apply IH, and if measurement \
2\[CloseCurlyQuote]s outcome was 1 it\[CloseCurlyQuote]ll apply SI.\nWarning \
the code will not error if multiple conditionals are satisfied.\n\n\n",
 StyleBox["Functionality:\n",
  FontWeight->"Bold"],
 "The two core circuit parser functions are ",
 StyleBox["RunCircuit ",
  FontSlant->"Italic"],
 "and ",
 StyleBox["RunCircuitFromInput, ",
  FontSlant->"Italic"],
 "both performing as expected.\n\nRunCircuit takes as input a circuit of the \
form described above. The output is a 3 element list --- {{State Prepared, \
Operations implemented}, {List of raw outcomes from measurements}, {list of \
lambdas}}\n\nRunCircuitFromInput is the same as above, except it additionally \
takes as input the output of a previous circuit and a circuit. Note the \
circuit input can contain the state preparation specification, however it \
will be ignored."
}], "Text",
 CellChangeTimes->{{3.748202301548546*^9, 3.7482023167661743`*^9}, {
  3.7505625409881754`*^9, 3.750562592311514*^9}, {3.750562638706893*^9, 
  3.750562763665805*^9}, {3.7505627970947065`*^9, 3.7505630460966296`*^9}, {
  3.7505631422308655`*^9, 3.750563426528389*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Input Parsers and Randomized Operation Selectors", \
"Subsection"]], "Subsection",
 CellChangeTimes->{{3.7482021263444104`*^9, 3.748202134453416*^9}, {
  3.7482877268394794`*^9, 3.7482877343008847`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Convert", " ", "Prep", " ", "to", " ", "Circuit", " ", "Parser", " ", 
    "format"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ConvertPrep", "[", "prep_", "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"PBs", " ", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"PauliDict", "[", 
           RowBox[{"StringJoin", "[", 
            RowBox[{
             RowBox[{"Characters", "[", "s", "]"}], "\[LeftDoubleBracket]", 
             RowBox[{
              RowBox[{"-", "2"}], ";;"}], "\[RightDoubleBracket]"}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", "prep"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\t\t\t\t\t", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"StringLength", "[", 
             RowBox[{
             "prep", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "]"}], "\[Equal]", "3"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{
             "PBs", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
             "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "=", 
            "1"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "prep", "]"}]}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\t\t\t\t\t", "PBs"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Select", " ", "Operation", " ", "Code"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ChoosePrep", "[", "prep_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "prep", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"w", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"Length", "[", 
             RowBox[{
             "prep", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{
              "prep", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"w", "=", 
         RowBox[{
         "prep", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
       "]"}], ";", 
      RowBox[{"State", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"w", "\[Rule]", 
         RowBox[{
         "prep", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}]}], ";", "State"}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ChooseTrans", "[", "trans_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "trans", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"w", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"Length", "[", 
             RowBox[{
             "trans", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{
              "trans", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
               "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"w", "=", 
         RowBox[{
         "trans", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
       "]"}], ";", 
      RowBox[{"op", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"w", "\[Rule]", 
         RowBox[{
         "trans", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}]}], ";", "op"}], ")"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ChooseMmt", "[", "mmt_", "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "mmt", "]"}], "\[Equal]", "1"}], ",", 
        RowBox[{"w", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"1", "/", 
            RowBox[{"Length", "[", 
             RowBox[{
             "mmt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", 
              RowBox[{
              "mmt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "]"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"w", "=", 
         RowBox[{
         "mmt", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
       "]"}], ";", 
      RowBox[{"op", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"w", "\[Rule]", 
         RowBox[{
         "mmt", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        "]"}]}], ";", "op"}], ")"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Choose", " ", "Transformation", " ", "Adaptively"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChooseAdaptiveT", "[", 
      RowBox[{"Op_", ",", "Outcomes_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ChosenOp", "=", 
        RowBox[{"ChooseTrans", "[", 
         RowBox[{"Op", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Outcomes", "\[LeftDoubleBracket]", 
             RowBox[{
             "AdO", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "\[RightDoubleBracket]"}], "\[Equal]", 
            RowBox[{
            "AdO", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"ChosenOp", "=", 
            RowBox[{"ChooseTrans", "[", 
             RowBox[{
             "AdO", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             "]"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"AdO", ",", 
           RowBox[{
           "Op", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "}"}]}], "]"}], ";", "ChosenOp"}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Choose", " ", "Measurement", " ", "Adapatively"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ChooseAdaptiveM", "[", 
      RowBox[{"Op_", ",", "Outcomes_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ChosenMmt", "=", 
        RowBox[{"ChooseMmt", "[", 
         RowBox[{"Op", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Outcomes", "\[LeftDoubleBracket]", 
             RowBox[{
             "AdO", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "\[RightDoubleBracket]"}], "\[Equal]", 
            RowBox[{
            "AdO", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"ChosenMmt", "=", 
            RowBox[{"ChooseMmt", "[", 
             RowBox[{
             "AdO", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
             "]"}]}]}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"AdO", ",", 
           RowBox[{
           "Op", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "}"}]}], "]"}], ";", "ChosenMmt"}], ")"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7482021366110888`*^9, 3.7482021953609095`*^9}, {
  3.7483552274297895`*^9, 3.7483552392073708`*^9}, {3.7483646519446316`*^9, 
  3.748364656723688*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]],

Cell[CellGroupData[{

Cell["Implement Operations", "Subsection",
 CellChangeTimes->{{3.748202256848072*^9, 3.7482022652159185`*^9}},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Implement", " ", "Transformation", " ", "Code"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ImplementAdaptiveT", "[", 
      RowBox[{"Op_", ",", "Output_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Outcomes", "=", 
        RowBox[{
        "Output", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Operation", "=", 
        RowBox[{"ChooseAdaptiveT", "[", 
         RowBox[{"Op", ",", "Outcomes"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"lambdap", " ", "=", " ", 
        RowBox[{
         RowBox[{"CliffordDict", "[", "Operation", "]"}], "[", 
         RowBox[{
          RowBox[{
          "Output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Operation", ",", "lambdap"}], "}"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ImplementNonAdaptiveT", "[", 
      RowBox[{"Op_", ",", "Output_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Operation", "=", 
        RowBox[{"ChooseTrans", "[", "Op", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"lambdap", "=", 
        RowBox[{
         RowBox[{"CliffordDict", "[", "Operation", "]"}], "[", 
         RowBox[{
          RowBox[{
          "Output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Operation", ",", "lambdap"}], "}"}]}], ")"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Implement", " ", "Measurement", " ", "Code"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ImplementAdaptiveM", "[", 
      RowBox[{"Op_", ",", "Output_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Outcomes", "=", 
        RowBox[{
        "Output", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Mmt", "=", 
        RowBox[{"ChooseAdaptiveM", "[", 
         RowBox[{"Op", ",", "Outcomes"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Outcome", "=", 
        RowBox[{"MmtOutcome", "[", 
         RowBox[{
          RowBox[{"PauliDict", "[", "Mmt", "]"}], ",", 
          RowBox[{
           RowBox[{
           "Output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lambdap", " ", "=", " ", 
        RowBox[{
         RowBox[{"MmtDict", "[", "Mmt", "]"}], "[", 
         RowBox[{
          RowBox[{
          "Output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Mmt", ",", "Outcome", ",", "lambdap"}], "}"}]}], ")"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ImplementNonAdaptiveM", "[", 
      RowBox[{"Op_", ",", "Output_"}], "]"}], ":=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Mmt", "=", 
        RowBox[{"ChooseMmt", "[", "Op", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Outcome", "=", 
        RowBox[{"MmtOutcome", "[", 
         RowBox[{
          RowBox[{"PauliDict", "[", "Mmt", "]"}], ",", 
          RowBox[{
           RowBox[{
           "Output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
           "\[LeftDoubleBracket]", 
           RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"lambdap", "=", 
        RowBox[{
         RowBox[{"MmtDict", "[", "Mmt", "]"}], "[", 
         RowBox[{
          RowBox[{
          "Output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Mmt", ",", "Outcome", ",", "lambdap"}], "}"}]}], ")"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7482022754366255`*^9, 3.748202296189845*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]],

Cell[CellGroupData[{

Cell["Run Circuit Functions", "Subsection",
 CellChangeTimes->{{3.7482023304757314`*^9, 3.7482023350429196`*^9}, 
   3.748361051208085*^9},
 CellTags->"SubHeader"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Circuit", " ", 
     RowBox[{"function", ":", " ", 
      RowBox[{"Input", "-", "Circuit"}]}]}], ",", " ", 
    RowBox[{"Output", "-", 
     RowBox[{"List", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"initial", " ", "state"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Lambda]_", "0"}], ",", 
          RowBox[{"\[Lambda]_", "1"}], ",", "..", ",", "\[Lambda]_n"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"k_", "1"}], ",", 
          RowBox[{"k_", "2"}], ",", 
          RowBox[{"..", "k_n"}]}], "}"}]}], "}"}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RunCircuit", "[", "cir_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Output", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"InitPrep", " ", "=", 
       RowBox[{"ChoosePrep", "[", 
        RowBox[{"cir", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ConvertedP", " ", "=", " ", 
       RowBox[{"ConvertPrep", "[", "InitPrep", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"Output", ",", 
        RowBox[{"{", "InitPrep", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"StabGroup", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "ConvertedP", "]"}], ">", "1"}], ",", 
         RowBox[{"stabgroup", "[", 
          RowBox[{
           RowBox[{
           "ConvertedP", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "ConvertedP", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "0"}], "}"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{
        RowBox[{
        "Output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], ",", 
        RowBox[{"SampleLambda", "[", "StabGroup", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "cir", "]"}], ">", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Do", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "Op", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[Equal]", "\"\<T\>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                "Op", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"TOut", " ", "=", " ", 
                   RowBox[{"ImplementAdaptiveT", "[", 
                    RowBox[{
                    RowBox[{
                    "Op", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", "Output"}], "]"}]}], ";", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{
                    "Output", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "TOut", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ";", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{
                    "Output", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "TOut", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ")"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"TOut", " ", "=", " ", 
                   RowBox[{"ImplementNonAdaptiveT", "[", 
                    RowBox[{
                    RowBox[{
                    "Op", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", "Output"}], "]"}]}], ";", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{
                    "Output", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "TOut", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ";", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{
                    "Output", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "TOut", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ")"}]}], 
               "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ")"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "Op", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[Equal]", "\"\<M\>\""}], ",", "\[IndentingNewLine]", 
             RowBox[{"(", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                "Op", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MmtOut", "=", 
                   RowBox[{"ImplementAdaptiveM", "[", 
                    RowBox[{
                    RowBox[{
                    "Op", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", "Output"}], "]"}]}], ";", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{
                    "Output", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "MmtOut", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ";", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{
                    "Output", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "MmtOut", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ";", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{
                    "Output", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "MmtOut", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ")"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"MmtOut", "=", 
                   RowBox[{"ImplementNonAdaptiveM", "[", 
                    RowBox[{
                    RowBox[{
                    "Op", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", "Output"}], "]"}]}], ";", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{
                    "Output", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "MmtOut", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ";", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{
                    "Output", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "MmtOut", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], ";", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{
                    RowBox[{
                    "Output", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "MmtOut", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ")"}]}], 
               "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ")"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"Op", ",", 
            RowBox[{"cir", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", "Output"}], 
     "\[IndentingNewLine]", ")"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Ancillary", " ", "Run", " ", "Circuit", " ", "function"}], ",", 
     " ", 
     RowBox[{
     "to", " ", "run", " ", "off", " ", "a", " ", "previous", " ", "circuits",
       " ", 
      RowBox[{"input", ":", " ", 
       RowBox[{
       "Assumes", " ", "circuit", " ", "is", " ", "a", " ", "list", " ", "of",
         " ", "Transformations", " ", "or", " ", 
        RowBox[{"Measurements", ".", " ", "\[IndentingNewLine]", "This"}], 
        " ", "should", " ", "allow", " ", "for", " ", "more", " ", "complex", 
        " ", "adaptive", " ", "circuits", " ", "to", " ", "be", " ", "run"}], 
       ":", " ", 
       RowBox[{
        RowBox[{"i", ".", "e", ".", " ", "given"}], " ", "outcome", " ", 
        "set", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"k_", "1"}], ",", "..."}], "}"}], " ", "run", " ", 
        "circuit", " ", "X"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RunCircuitFromInput", "[", 
     RowBox[{"cir_", ",", "input_"}], "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Output", "=", "input"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "Op", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[Equal]", "\"\<T\>\""}], ",", "\[IndentingNewLine]", 
           RowBox[{"(", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
              "Op", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"TOut", " ", "=", " ", 
                 RowBox[{"ImplementAdaptiveT", "[", 
                  RowBox[{
                   RowBox[{
                   "Op", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", "Output"}], "]"}]}], ";", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{
                  "Output", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "TOut", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], ";", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{
                  "Output", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "TOut", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "]"}]}], ")"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"TOut", " ", "=", " ", 
                 RowBox[{"ImplementNonAdaptiveT", "[", 
                  RowBox[{
                   RowBox[{
                   "Op", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", "Output"}], "]"}]}], ";", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{
                  "Output", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "TOut", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], ";", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{
                  "Output", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "TOut", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "]"}]}], ")"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ")"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "Op", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[Equal]", "\"\<M\>\""}], ",", "\[IndentingNewLine]", 
           RowBox[{"(", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
              "Op", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"MmtOut", "=", 
                 RowBox[{"ImplementAdaptiveM", "[", 
                  RowBox[{
                   RowBox[{
                   "Op", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", "Output"}], "]"}]}], ";", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{
                  "Output", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "MmtOut", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], ";", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{
                  "Output", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "MmtOut", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "]"}], ";", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{
                  "Output", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "MmtOut", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}]}], "]"}]}], ")"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"MmtOut", "=", 
                 RowBox[{"ImplementNonAdaptiveM", "[", 
                  RowBox[{
                   RowBox[{
                   "Op", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", "Output"}], "]"}]}], ";", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{
                  "Output", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "MmtOut", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], "]"}], ";", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{
                  "Output", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "MmtOut", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}], "]"}], ";", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{
                  RowBox[{
                  "Output", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{
                  "MmtOut", "\[LeftDoubleBracket]", "3", 
                   "\[RightDoubleBracket]"}]}], "]"}]}], ")"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ")"}]}], 
          "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"Op", ",", "cir"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "Output"}], "\[IndentingNewLine]", 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7482013728806114`*^9, 3.748201373618157*^9}, 
   3.7482014243095727`*^9, {3.7482015257531023`*^9, 3.748201553165223*^9}, {
   3.748202059646483*^9, 3.7482020615303235`*^9}, 3.748202113008623*^9, {
   3.7482021463840704`*^9, 3.7482021577590647`*^9}, 3.7482022718538313`*^9, {
   3.748202309794467*^9, 3.7482023117142854`*^9}, {3.7483513161335735`*^9, 
   3.748351344775652*^9}, {3.7483516161009493`*^9, 3.7483516193049774`*^9}, {
   3.74835348737459*^9, 3.7483534941525383`*^9}, {3.748354666790164*^9, 
   3.74835466917729*^9}, {3.748354703793687*^9, 3.7483547439222174`*^9}, {
   3.748355181120139*^9, 3.748355183328779*^9}, {3.7483610590746064`*^9, 
   3.748361229731316*^9}},
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Main Setup and Examples", "Section",
 CellChangeTimes->{{3.748202496678887*^9, 3.7482025179108057`*^9}}],

Cell[CellGroupData[{

Cell["Code Setup (RUN THIS PRIOR TO ANY EXAMPLE)", "Subsection",
 CellChangeTimes->{{3.748208449627365*^9, 3.748208451687096*^9}, {
  3.7482133644432545`*^9, 3.748213380111018*^9}, {3.748217487083431*^9, 
  3.748217491714126*^9}}],

Cell[TextData[{
 "Code to setup up simulator. \n\n",
 StyleBox["Note:",
  FontWeight->"Bold"],
 " all code sections that are evaluated are all automatically closed after \
evaluation. If you wish to edit/inspect the code you can find it in the \
appropriate section above."
}], "Text",
 CellChangeTimes->{{3.748208457406578*^9, 3.748208494558709*^9}, {
  3.748209538416275*^9, 3.748209550165819*^9}, {3.748212906150516*^9, 
  3.7482129549618816`*^9}, {3.748213388529196*^9, 3.74821339715397*^9}, {
  3.7482174967888975`*^9, 3.7482175049798427`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Evaluate", " ", "\"\<Core\>\"", " ", "Cells"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nb", "=", 
   RowBox[{"EvaluationNotebook", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NotebookFind", "[", 
   RowBox[{"nb", ",", "\"\<Core\>\"", ",", "All", ",", "CellTags"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SelectionEvaluate", "[", "nb", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Close", " ", "all", " ", "evaluated", " ", "sections", " ", 
    RowBox[{"(", 
     RowBox[{
     "NOTE", " ", "this", " ", "is", " ", "applied", " ", "at", " ", "the", 
      " ", "level", " ", "of", " ", "sub", 
      RowBox[{"(", "sub", ")"}], "sections"}], ")"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nbClose", "=", 
   RowBox[{"SelectedNotebook", "[", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"NotebookFind", "[", 
   RowBox[{"nbClose", ",", "\"\<SubHeader\>\"", ",", "All", ",", "CellTags"}],
    "]"}], ";"}], "\n", 
 RowBox[{"FrontEndTokenExecute", "[", "\"\<SelectionCloseAllGroups\>\"", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.748209126859524*^9, 3.7482091410562143`*^9}, {
   3.7482095339958277`*^9, 3.7482095346039963`*^9}, {3.7482095647008133`*^9, 
   3.7482095724950123`*^9}, {3.748210391822625*^9, 3.7482103982575216`*^9}, {
   3.748210490273176*^9, 3.7482104973515463`*^9}, {3.7482105312394657`*^9, 
   3.7482105353125467`*^9}, {3.7482114922903824`*^9, 3.748211551521849*^9}, {
   3.748211956248055*^9, 3.7482119706640797`*^9}, {3.7482120187397165`*^9, 
   3.748212029070839*^9}, {3.748212130050452*^9, 3.748212148494258*^9}, {
   3.7482121900325785`*^9, 3.748212210290118*^9}, {3.7482123283646345`*^9, 
   3.7482123377504096`*^9}, 3.7482123808399105`*^9, {3.7482126134584494`*^9, 
   3.7482126152851906`*^9}, {3.748212884824959*^9, 3.7482129009494557`*^9}, {
   3.7482132097155*^9, 3.7482132382414165`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.748208505801365*^9, 3.748208541969236*^9}}],

Cell["\<\
Each Example can be run independently once the code setup has been executed.\
\>", "Text",
 CellChangeTimes->{{3.748208549650506*^9, 3.7482085758671274`*^9}}],

Cell[CellGroupData[{

Cell["Circuit Parser Example/Tutorial Code", "Subsubsection",
 CellChangeTimes->{{3.7482086205124483`*^9, 3.7482086319234223`*^9}, {
  3.748217287296223*^9, 3.7482172900265427`*^9}}],

Cell["\<\
Below is an arbitrary implementation of all the circuit parsers features. \
This implementation can used as a template for other circuits.\
\>", "Text",
 CellChangeTimes->{{3.748208768252037*^9, 3.7482088157068133`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Example", " ", "input", " ", "to", " ", "circuit", " ", "parser"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"CircEx", "=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<IZ\>\"", ",", "\"\<ZI\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<XX\>\"", ",", "\"\<-YY\>\""}], "}"}]}], " ", "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"0.75", ",", "0.25"}], "}"}]}], "}"}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{"Prepare", " ", "|", 
         RowBox[{"00", ">", " ", "or"}], " ", "|", 
         RowBox[{
          RowBox[{"B_", "00"}], ">", " ", 
          RowBox[{
          "with", " ", "probability", " ", "0.75", " ", "or", " ", 
           "0.25"}]}]}], "*)"}], "\[IndentingNewLine]", "         ", 
       RowBox[{"{", 
        RowBox[{"\"\<T\>\"", ",", "False", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"\"\<HI\>\"", ",", "\"\<SI\>\""}], "}"}], "}"}]}], "}"}], 
       ",", " ", 
       RowBox[{"(*", 
        RowBox[{"Non", "-", 
         RowBox[{"adaptive", " ", 
          RowBox[{"Transformation", ":", " ", 
           RowBox[{
           "Apply", " ", "HI", " ", "or", " ", "SI", " ", "with", " ", 
            "equal", " ", "probability"}]}]}]}], "*)"}], 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{"\"\<M\>\"", ",", "False", ",", 
         RowBox[{"{", 
          RowBox[{"{", "\"\<IX\>\"", "}"}], "}"}]}], "}"}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{"Non", "-", 
         RowBox[{"adaptive", " ", "Measurement", " ", "of", " ", "IX"}]}], 
        "*)"}], "\[IndentingNewLine]", "         ", 
       RowBox[{"{", 
        RowBox[{"\"\<T\>\"", ",", "True", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", "\"\<II\>\"", "}"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "0", "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"{", "\"\<ZX\>\"", "}"}], "}"}]}], "}"}], "}"}]}], 
          "}"}]}], "}"}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Apdative", " ", 
          RowBox[{"Transformation", ":", " ", 
           RowBox[{
           "If", " ", "measurement", " ", "outcome", " ", "of", " ", "IX", 
            " ", 
            RowBox[{"(", 
             RowBox[{
             "2", "nd", " ", "circuit", " ", "element", " ", "but", " ", "1", 
              "st", " ", "measurement"}], ")"}], " ", "is", " ", "0", " ", 
            "apply", " ", "ZX"}]}]}], ",", " ", 
         RowBox[{"otherwise", " ", "apply", " ", "Identity", " ", 
          RowBox[{"(", 
           RowBox[{"Indicated", " ", "by", " ", "first", " ", "operation"}], 
           ")"}]}]}], "*)"}], "\[IndentingNewLine]", "         ", 
       RowBox[{"{", 
        RowBox[{"\"\<M\>\"", ",", "False", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<XZ\>\"", ",", "\"\<YY\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.25", ",", "0.75"}], "}"}]}], "}"}]}], "}"}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"2", "nd", " ", "Non"}], "-", 
          RowBox[{"Apdative", " ", 
           RowBox[{"Measurement", ":", " ", 
            RowBox[{
            "note", " ", "4", "th", " ", "element", " ", "of", " ", 
             "circuit"}]}]}]}], ",", " ", 
         RowBox[{"but", " ", "second", " ", "measurement"}]}], "*)"}], 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{"\"\<M\>\"", ",", "True", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", "\"\<XX\>\"", "}"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", "\"\<IZ\>\"", "}"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", "\"\<ZX\>\"", "}"}], "}"}]}], "}"}]}], "}"}]}], 
          "}"}]}], "}"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"Apdative", " ", "measurement"}], ";", " ", 
         RowBox[{
          RowBox[{"measure", " ", "IZ", " ", "if", " ", "outcome", " ", "1"}],
           " ", "=", " ", 
          RowBox[{
           RowBox[{"outcome", " ", "2"}], " ", "=", " ", "0"}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"measure", " ", "ZX", " ", "if", " ", "outcome", " ", "1"}], 
         " ", "=", " ", 
         RowBox[{
          RowBox[{"outcome", " ", "2"}], " ", "=", " ", "1"}]}], ",", " ", 
        RowBox[{"otherwise", " ", "measure", " ", "XX"}]}], "*)"}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Note", " ", "code", " ", "is", " ", "currently", " ", "not", " ", 
      "built", " ", "to", " ", "handle", " ", "conditioning", " ", "on", " ", 
      "which", " ", "random", " ", "operation", " ", "is", " ", "applied"}], 
     ",", " ", 
     RowBox[{
      RowBox[{"maybe", " ", "later"}], "..."}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"OutputCirc", "=", 
    RowBox[{"RunCircuit", "[", "CircEx", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.748202549394938*^9, 3.7482025557670135`*^9}, 
   3.7482087500132685`*^9, {3.7482088203099794`*^9, 3.748208854385028*^9}, {
   3.748215845965079*^9, 3.7482161886770344`*^9}, {3.748216220438064*^9, 
   3.7482164679636683`*^9}, {3.7482166063103*^9, 3.748216798105194*^9}, {
   3.7482168763729944`*^9, 3.748216876510909*^9}, {3.7482169073479195`*^9, 
   3.7482169195653954`*^9}, 3.7482170403065753`*^9, 3.748217093441854*^9, {
   3.7482185052324047`*^9, 3.748218509541748*^9}}],

Cell["\<\
OutputCirc contains all relevant information about the execution of the \
circuit.
The first element of the output contains the potential randomly chosen \
circuit operations (note: we do not distinguish between measurements and \
transformations here);\
\>", "Text",
 CellChangeTimes->{{3.74821705320065*^9, 3.748217115721134*^9}, {
  3.7482175621836157`*^9, 3.748217593960049*^9}}],

Cell[BoxData[
 RowBox[{"OutputCirc", "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.7482171187013006`*^9, 3.7482171262136717`*^9}}],

Cell["\<\
The second element contains the measurement outcomes (useful for gathering \
statistics);\
\>", "Text",
 CellChangeTimes->{{3.74821714641298*^9, 3.748217165857006*^9}}],

Cell[BoxData[
 RowBox[{"OutputCirc", "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.74821716793073*^9, 3.7482171910614853`*^9}}],

Cell["\<\
The final element contains the sequence of ontic states the circuit mapped \
through;\
\>", "Text",
 CellChangeTimes->{{3.748217198049183*^9, 3.748217225860056*^9}}],

Cell[BoxData[
 RowBox[{"OutputCirc", "\[LeftDoubleBracket]", "3", 
  "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.7482172274480777`*^9, 3.748217233768186*^9}}],

Cell["\<\
To visualize this sequence we call the FiniteStatePauli or FiniteStateRaw \
functions which will output a list of graphic representations (the \
finite-state machine representation) of the above ontic states.\
\>", "Text",
 CellChangeTimes->{{3.7482172500521584`*^9, 3.748217311623243*^9}, {
  3.748218361448945*^9, 3.748218368825403*^9}}],

Cell[BoxData[{
 RowBox[{"FiniteStatePauli", "[", 
  RowBox[{
  "OutputCirc", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FiniteStateRaw", "[", 
  RowBox[{
  "OutputCirc", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.748216914837309*^9, 3.7482169539142437`*^9}, {
  3.7482173297960515`*^9, 3.7482173339684825`*^9}}],

Cell["\<\
Finally if we wish to investigate how the k-th measurement update was \
implemented we call the UpdateStepsCircRaw or (...)Pauli functions to \
visualize the update. For example here the 1st and 3rd measurement updates \
respectively;\
\>", "Text",
 CellChangeTimes->{{3.7482173385666504`*^9, 3.7482174382232885`*^9}, {
  3.748218378171653*^9, 3.7482183797446785`*^9}}],

Cell[BoxData[{
 RowBox[{"UpdateStepsCircPauli", "[", 
  RowBox[{"CircEx", ",", "OutputCirc", ",", "1"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"UpdateStepsCircRaw", "[", 
  RowBox[{"CircEx", ",", "OutputCirc", ",", "3"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7482173265460525`*^9, 3.748217330932354*^9}, {
   3.7482173992702694`*^9, 3.748217404143268*^9}, 3.7482174405208664`*^9, {
   3.7490944099062853`*^9, 3.7490944196661973`*^9}, {3.7507973714250607`*^9, 
   3.750797372309517*^9}, {3.7507978747719865`*^9, 3.750797904034998*^9}, {
   3.7507982536286182`*^9, 3.7507982540583544`*^9}}],

Cell["\<\
Where the updating has broken into 5 panels (with the first number indicating \
the outcome of the measurement M);

\tPanel 1: The initial ontic state, prior to measurement.
\tPanel 2: The measured observable is highlighted with a transparent black \
dot. A dashed border indicates M commutes with P, and solid border indicates \
M anti-commutes with P.
\tPanel 3: If M commutes with P then the cell that is to be deterministically \
update is highlighted with a dashed green-black border. (Note: a cell \
transparent cell indicates that cell will potentially be updated)
\t\t\tIf M anti-commutes with P the cells that will remain fixed through the \
update rule are highlighted with a thick purple border, those that will be \
updated are highlighted with a dashed purple-green border.
\t\t\tNote: The identity will be fixed during this procedure and the measured \
cell updated to the outcome (as per the measurement update rules).
\tPanel 4: Finally cells that will be randomized (i.e. they commute with P \
but not M) are made transparent to indicate they may be updated.
\tPanel 5: The final ontic state, after meausrement.\
\>", "Text",
 CellChangeTimes->{{3.7507973842311897`*^9, 3.7507974009778943`*^9}, {
  3.750800466328273*^9, 3.750800905553278*^9}}],

Cell["\<\
Finally here is code that can be repeatedly executed to visualize the updates \
for different sampling scenarios;\
\>", "Text",
 CellChangeTimes->{{3.748218430369502*^9, 3.7482184653319736`*^9}}],

Cell[BoxData[{
 RowBox[{"OutputCirc", "=", 
  RowBox[{"RunCircuit", "[", "CircEx", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FiniteStateRaw", "[", 
  RowBox[{
  "OutputCirc", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"UpdateStepsCircRaw", "[", 
  RowBox[{"CircEx", ",", "OutputCirc", ",", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.74821846696297*^9, 3.7482184962969046`*^9}, {
  3.749094438777563*^9, 3.7490944428186502`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Reproducing the Mermin-Peres Square", "Subsubsection",
 CellChangeTimes->{{3.7482086556677995`*^9, 3.7482086596803284`*^9}, {
  3.7483657134131274`*^9, 3.748365715824643*^9}}],

Cell[TextData[{
 "In this example we look at the Mermin-Peres square. While there is no \
particular \[OpenCurlyDoubleQuote]circuit\[CloseCurlyDoubleQuote] that is \
associated with the Mermin-Peres square we can demonstrate that a measurement \
of any context with any state will statisfy the functional relationships. \
Also this example can use what we call the \[OpenCurlyDoubleQuote]cannonical\
\[CloseCurlyDoubleQuote] identity preparation; A preparation of the maximally \
mixed state that is composed of a uniform mixture of ",
 StyleBox["all",
  FontSlant->"Italic"],
 " pure stabilizer states. Ontologically this corresponds to a uniform \
preparation over all ontic states.\n\nFirst let us define the contexts to be \
selected from;"
}], "Text",
 CellChangeTimes->{{3.748273745279235*^9, 3.748273844105006*^9}, {
  3.7482738780541935`*^9, 3.7482739483610787`*^9}, {3.7482940774396586`*^9, 
  3.748294082470687*^9}, {3.7487076126075025`*^9, 3.7487076295232434`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MPContexts", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<XI\>\"", ",", "\"\<IX\>\"", ",", "\"\<XX\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{"\"\<IZ\>\"", ",", "\"\<ZI\>\"", ",", "\"\<ZZ\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{"\"\<XZ\>\"", ",", "\"\<ZX\>\"", ",", "\"\<YY\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{"\"\<XI\>\"", ",", "\"\<IZ\>\"", ",", "\"\<XZ\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{"\"\<IX\>\"", ",", "\"\<ZI\>\"", ",", "\"\<ZX\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{"\"\<XX\>\"", ",", "\"\<ZZ\>\"", ",", "\"\<YY\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.748294083793874*^9, 3.7482942039828587`*^9}, 
   3.748364473347951*^9, 3.748365081857139*^9}],

Cell["\<\
These contexts can then be arranged into the Mermin-Peres Square;\
\>", "Text",
 CellChangeTimes->{{3.7482942112653737`*^9, 3.748294228100007*^9}, {
  3.74835051220712*^9, 3.748350512993634*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MPSquare", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<XI\>\"", ",", "\"\<IX\>\"", ",", "\"\<XX\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{"\"\<IZ\>\"", ",", "\"\<ZI\>\"", ",", "\"\<ZZ\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{"\"\<XZ\>\"", ",", "\"\<ZX\>\"", ",", "\"\<YY\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "\t", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MPSquare", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7482942306364455`*^9, 3.748294304406536*^9}}],

Cell["\<\
The following code will randomly select a context to be measured. We\
\[CloseCurlyQuote]ll also choose a random stabilizer state, as defined by the \
squares contexts, as our input. \
\>", "Text",
 CellChangeTimes->{{3.748299821925832*^9, 3.7482998411262426`*^9}, {
  3.7483502426863832`*^9, 3.748350271607127*^9}, {3.7483503807521963`*^9, 
  3.748350383684069*^9}}],

Cell[BoxData[{
 RowBox[{"MContext", " ", "=", " ", 
  RowBox[{"RandomChoice", "[", "MPContexts", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PContext", " ", "=", " ", 
   RowBox[{"RandomChoice", "[", "MPContexts", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"StabGroupMP", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", "\"\<-\>\""}], "}"}], "]"}], "<>", 
     RowBox[{
     "PContext", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
    ",", 
    RowBox[{
     RowBox[{"RandomChoice", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", "\"\<-\>\""}], "}"}], "]"}], "<>", 
     RowBox[{
     "PContext", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
   "}"}], " "}]}], "Input",
 CellChangeTimes->{{3.748350194735936*^9, 3.7483502171703644`*^9}, {
  3.7483502790900545`*^9, 3.7483503746709414`*^9}, {3.7483504293348274`*^9, 
  3.748350466684739*^9}, {3.7483505066013045`*^9, 3.748350508604071*^9}}],

Cell["\<\
Where we have chosen a random basis element for the stabilizer state (the \
random choice of + or -). 

If you wish the maximally mixed state to be used over the above selection run \
the code below. Note there is a difference - stabilizer operators like YX \
cannot appear as elements of the ontology with the above selection of input \
states.\
\>", "Text",
 CellChangeTimes->{{3.748350388159316*^9, 3.748350421411707*^9}, {
  3.748350551129105*^9, 3.748350641555436*^9}}],

Cell[BoxData[
 RowBox[{"StabGroupMP", " ", "=", " ", 
  RowBox[{"{", "\"\<II\>\"", "}"}]}]], "Input",
 CellChangeTimes->{{3.7483506634566336`*^9, 3.7483506728078985`*^9}, {
   3.7483548176998014`*^9, 3.748354896615379*^9}, {3.7483552790723896`*^9, 
   3.748355385050414*^9}, 3.7483554392972703`*^9}],

Cell["\<\
The following code will generate the Mermin-Peres square circuit;\
\>", "Text",
 CellChangeTimes->{{3.748360982566574*^9, 3.748361035337744*^9}}],

Cell[BoxData[
 RowBox[{"MPCircuit", " ", "=", " ", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"{", "StabGroupMP", "}"}], "}"}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<M\>\"", ",", "False", ",", 
        RowBox[{"{", 
         RowBox[{"{", "M", "}"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"M", ",", "MContext"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7483612752119627`*^9, 3.7483612933930197`*^9}, {
  3.748361348179038*^9, 3.748361425585208*^9}}],

Cell["\<\
Then run the circuit. Additionally we plot the finite state representation of \
the circuit and the value assignment given to the Mermin-Peres Square;\
\>", "Text",
 CellChangeTimes->{{3.7483615252676973`*^9, 3.748361561593087*^9}, {
  3.748361594972254*^9, 3.748361621607299*^9}, {3.748363788937863*^9, 
  3.7483638054978666`*^9}}],

Cell[BoxData[{
 RowBox[{"MPOut", "=", 
  RowBox[{"RunCircuit", "[", "MPCircuit", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FiniteStateRaw", "[", 
  RowBox[{"MPOut", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MPValuation", "[", "lambda_", "]"}], ":=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lambda", "\[LeftDoubleBracket]", 
      RowBox[{"R2I", "[", 
       RowBox[{"PauliDict", "[", "#1", "]"}], "]"}], 
      "\[RightDoubleBracket]"}], "&"}], ",", "MPSquare", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"MPValuation", "[", 
     RowBox[{"l", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "]"}], "//", "MatrixForm"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", 
     RowBox[{
     "MPOut", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7483616230454144`*^9, 3.748361695536688*^9}, {
   3.748362175355042*^9, 3.748362178801568*^9}, {3.7483622514467583`*^9, 
   3.7483622612807026`*^9}, {3.748362297629427*^9, 3.748362301116279*^9}, {
   3.748362594906037*^9, 3.7483626423501515`*^9}, 3.74836268192686*^9, {
   3.7483628642561083`*^9, 3.7483628991125956`*^9}, {3.748362931017268*^9, 
   3.748362981694603*^9}, {3.748363039179346*^9, 3.748363040013833*^9}, {
   3.7483631653419404`*^9, 3.748363210809512*^9}}],

Cell["\<\

The above code has been condensed bellow for ease of repeat runs; Two options \
are provided: Indentity Input and Randomized Measurement Sequence, set to \
true to use. Finally we check whether the measured sequence satisfies the \
functional constraints of the Mermin-Peres Square.\
\>", "Text",
 CellChangeTimes->{{3.7483637726274147`*^9, 3.748363773178076*^9}, {
   3.748363831627762*^9, 3.748363929078681*^9}, {3.748364144241421*^9, 
   3.7483641961034813`*^9}, {3.748364711855625*^9, 3.748364740039809*^9}, 
   3.7483657731030507`*^9, {3.7485359815620604`*^9, 3.7485360198302712`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"IdentityInput", " ", "=", " ", "False"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RandomizedMSeq", " ", "=", " ", "False"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MContext", " ", "=", " ", 
  RowBox[{"RandomChoice", "[", "MPContexts", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PContext", " ", "=", " ", 
   RowBox[{"RandomChoice", "[", "MPContexts", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"StabGroupMP", " ", "=", " ", 
  RowBox[{"If", "[", 
   RowBox[{"IdentityInput", ",", " ", 
    RowBox[{"{", "\"\<II\>\"", "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"RandomChoice", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "\"\<-\>\""}], "}"}], "]"}], "<>", 
       RowBox[{
       "PContext", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{
       RowBox[{"RandomChoice", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<\>\"", ",", "\"\<-\>\""}], "}"}], "]"}], "<>", 
       RowBox[{
       "PContext", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
      "}"}]}], " ", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MContextP", " ", "=", " ", 
   RowBox[{"If", "[", 
    RowBox[{"RandomizedMSeq", ",", 
     RowBox[{"RandomSample", "[", "MContext", "]"}], ",", "MContext"}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MPCircuit", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"{", "StabGroupMP", "}"}], "}"}], "}"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<M\>\"", ",", "False", ",", 
         RowBox[{"{", 
          RowBox[{"{", "M", "}"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"M", ",", "MContextP"}], "}"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MPOut", "=", 
  RowBox[{"RunCircuit", "[", "MPCircuit", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FiniteStateRaw", "[", 
  RowBox[{"MPOut", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MPValuation", "[", "lambda_", "]"}], ":=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"lambda", "\[LeftDoubleBracket]", 
      RowBox[{"R2I", "[", 
       RowBox[{"PauliDict", "[", "#1", "]"}], "]"}], 
      "\[RightDoubleBracket]"}], "&"}], ",", "MPSquare", ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"MPValuation", "[", 
      RowBox[{"l", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      "]"}], "//", "MatrixForm"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", 
      RowBox[{
      "MPOut", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"FuncConstraintsTrue", " ", "=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
         "MPOut", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
        RowBox[{
         RowBox[{
         "MPOut", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+", 
        RowBox[{
         RowBox[{
         "MPOut", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ",", "2"}],
       "]"}], "\[Equal]", " ", 
     RowBox[{
      RowBox[{"BetaFn", "[", 
       RowBox[{
        RowBox[{"PauliDict", "[", 
         RowBox[{
         "MContext", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "]"}], ",", 
        RowBox[{"PauliDict", "[", 
         RowBox[{
         "MContext", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "]"}]}], "]"}], "/", "2"}]}], ",", "True", ",", "False"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7483642125513525`*^9, 3.748364337366045*^9}, {
  3.748364422451685*^9, 3.74836442260559*^9}, {3.7483647009953117`*^9, 
  3.748364709089327*^9}, {3.7483647432068596`*^9, 3.7483647893023376`*^9}, {
  3.748364853339801*^9, 3.748364859895403*^9}, {3.7483648918604174`*^9, 
  3.7483649209302425`*^9}, {3.7483649801275063`*^9, 3.748364984914033*^9}, {
  3.74836502810365*^9, 3.7483650287982225`*^9}, {3.748365128556657*^9, 
  3.748365133920353*^9}, {3.7485360229795723`*^9, 3.74853619690724*^9}, {
  3.7485363278799677`*^9, 3.7485363306684427`*^9}, {3.7485364012740345`*^9, 
  3.7485364135546093`*^9}, {3.7490941425427666`*^9, 3.749094146745178*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["PBR Experiment: Anti-Distinguishing Measurements", "Subsubsection",
 CellChangeTimes->{{3.748208671461075*^9, 3.748208680551476*^9}, {
  3.7483656926933455`*^9, 3.7483657080918074`*^9}}],

Cell[TextData[{
 "In this section we will cover how the model reproduces the standard PBR \
expeirment. The basic overview of the PBR experiment can be found in the \
paper accompanying this code. However as an overview the experiment consists \
of an adaptive measurement sequence that measures in a non-Pauli stabilizer \
basis. We define the basic circuit of the PBR measurement as;\n\nMeasure YY;\n\
\tIf O(YY) = 0, measure XX\n\tIf O(YY) = 1, measure XZ\n\t\nThis measurement \
sequence can be characterized by two bits {O(YY), O(M_2)}, which if we track \
stabilizer groups we can see project onto the four stabilizer states;\n\nS(\
\[Phi](0,0)) = {I,ZZ,-XX,YY} \[Equivalent] |01> + |10> = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "0"], TraditionalForm]]],
 "\nS(\[Phi](0,1)) = {I,-ZZ,XX,YY} \[Equivalent] |+-> + |-+> = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "1"], TraditionalForm]]],
 "\nS(\[Phi](1,0)) = {I,ZX,-XZ,-YY} \[Equivalent]|0-> + |1+> = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "2"], TraditionalForm]]],
 "\nS(\[Phi](1,1)) = {I,-ZX,XZ,-YY} \[Equivalent]|+1> + |-0> = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "3"], TraditionalForm]]],
 "\n\nWhich form a basis. \nThe states that are antidistinguished, i.e. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Pr", "(", 
    SubscriptBox["\[Xi]", "i"]}], TraditionalForm]]],
 "| ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Psi]", "i"], TraditionalForm]]],
 ")=0, by this measurement are;\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     SubscriptBox["\[Psi]", "0"], ">"}]}], TraditionalForm]]],
 " = |00> \[Equivalent] {I,IZ,ZI,ZZ}\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     SubscriptBox["\[Psi]", "1"], ">"}]}], TraditionalForm]]],
 " = |++> \[Equivalent] {I,IX,XI,XX}\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     SubscriptBox["\[Psi]", "2"], ">"}]}], TraditionalForm]]],
 " = |0+> \[Equivalent] {I,IX,ZI,ZX}\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     SubscriptBox["\[Psi]", "3"], ">"}]}], TraditionalForm]]],
 " = |+0> \[Equivalent] {I,IZ,XI,XZ}\n\nIn this code we will provide a \
variety of methods for interacting with how the model accounts for \
measurements of this kind. Firstly we choose an input state;"
}], "Text",
 CellChangeTimes->{{3.7485359265063114`*^9, 3.7485359274537287`*^9}, {
  3.7487070586204696`*^9, 3.748707102361507*^9}, {3.7487071527079816`*^9, 
  3.748707152987191*^9}, {3.7487076447924285`*^9, 3.748707711182003*^9}, {
  3.748707741632622*^9, 3.7487079397599897`*^9}, {3.7487096344991713`*^9, 
  3.7487096352003*^9}, {3.7487097379995203`*^9, 3.748710003677359*^9}, {
  3.7487101231401267`*^9, 3.748710135747406*^9}, {3.7487102017432346`*^9, 
  3.748710426396738*^9}, {3.748710477213166*^9, 3.748710596421524*^9}, {
  3.7487864645952215`*^9, 3.7487866191420517`*^9}, {3.7487918265155306`*^9, 
  3.748791828002615*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ChooseState", " ", "=", " ", "4"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AntiDistStates", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<IZ\>\"", ",", "\"\<ZI\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<IX\>\"", ",", "\"\<XI\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<IX\>\"", ",", "\"\<ZI\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<IZ\>\"", ",", "\"\<XI\>\""}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"InputState", " ", "=", " ", 
  RowBox[{
  "AntiDistStates", "\[LeftDoubleBracket]", "ChooseState", 
   "\[RightDoubleBracket]"}]}]}], "Input",
 CellChangeTimes->{{3.748786620133441*^9, 3.748786710155547*^9}, 
   3.7487893212529354`*^9, 3.7488073412091784`*^9, 3.7488084685318394`*^9, 
   3.7488085244444084`*^9}],

Cell["Next we set up the PBR measurement circuit;", "Text",
 CellChangeTimes->{{3.7487893282007957`*^9, 3.7487893369619045`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PBRMmtCircuit", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "InputState", "}"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<M\>\"", ",", "False", ",", 
       RowBox[{"{", 
        RowBox[{"{", "\"\<YY\>\"", "}"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<M\>\"", ",", "True", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\"\<II\>\"", "}"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "1", "}"}], ",", 
             RowBox[{"{", "0", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", "\"\<XX\>\"", "}"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", "1", "}"}], ",", 
             RowBox[{"{", "1", "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", "\"\<XZ\>\"", "}"}], "}"}]}], "}"}]}], "}"}]}], 
        "}"}]}], "}"}]}], "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.748789338185152*^9, 3.7487893385469294`*^9}, {
  3.748790746246564*^9, 3.7487908286738453`*^9}, {3.7487912724030037`*^9, 
  3.7487913070803432`*^9}, {3.748791477493462*^9, 3.748791520569935*^9}, {
  3.748791836144602*^9, 3.748791837783592*^9}}],

Cell["\<\
With the setup complete we will run through one run measurement to \
investigate how the model evolves during this measurement. A final check is \
done to ensure the outcome satisfies the anti-distinguishing measurement \
statistics;\
\>", "Text",
 CellChangeTimes->{{3.7487913222796354`*^9, 3.7487913776441345`*^9}, {
  3.7488070205341067`*^9, 3.7488070599108577`*^9}}],

Cell[BoxData[{
 RowBox[{"OutputCirc", "=", 
  RowBox[{"RunCircuit", "[", "PBRMmtCircuit", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FiniteStatePauli", "[", 
   RowBox[{
   "OutputCirc", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
   "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "below", " ", "function", " ", "will", " ", "output", " ", 
     "true", " ", "if", " ", 
     SubscriptBox["\[Psi]", "i"]}], " ", "=", " ", 
    SubscriptBox["\[Xi]", "i"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"TrueQ", "[", 
  RowBox[{
   RowBox[{
   "OutputCirc", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
   "\[Equal]", 
   RowBox[{"IntegerDigits", "[", "ChooseState", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7487913804524045`*^9, 3.7487913867436857`*^9}, {
  3.748791449861284*^9, 3.7487914590406303`*^9}, {3.7488070081537304`*^9, 
  3.7488070090541763`*^9}, {3.74880706492577*^9, 3.748807068740939*^9}, {
  3.7488071255094976`*^9, 3.7488071283447514`*^9}, {3.7488072457884283`*^9, 
  3.748807325750699*^9}}],

Cell["\<\
Finally we will write some code to collect repeated run statistics and plot \
the outcome frequencies;\
\>", "Text",
 CellChangeTimes->{{3.748807591507118*^9, 3.748807628448369*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"NoSamples", " ", "=", " ", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"OutcomeStore", " ", "=", " ", 
    RowBox[{"{", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"AppendTo", "[", 
    RowBox[{"OutcomeStore", ",", 
     RowBox[{"FromDigits", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RunCircuit", "[", "PBRMmtCircuit", "]"}], 
        "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", "2"}], 
      "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "NoSamples"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{"OutcomeStore", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}], "}"}], ",", 
   "\"\<Probability\>\"", ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", "Automatic"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7488076297795496`*^9, 3.748807787949264*^9}, {
   3.7488078353600674`*^9, 3.748807859732603*^9}, {3.7488079854746876`*^9, 
   3.7488079958743105`*^9}, {3.748808117203595*^9, 3.7488082075705085`*^9}, {
   3.7488082414176655`*^9, 3.7488082484883113`*^9}, {3.7488083035633955`*^9, 
   3.74880830870726*^9}, {3.748808378247438*^9, 3.748808442811678*^9}, {
   3.7488085944542947`*^9, 3.748808635461043*^9}, {3.748808876467662*^9, 
   3.7488088971299376`*^9}, 3.7488089635560327`*^9}],

Cell["\<\
Which agree in the limit of the number of samples with the quantum statistics.\
\>", "Text",
 CellChangeTimes->{{3.748869160448457*^9, 3.7488691814385233`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Arbitrary Sequences of Measurements, where Intermediary Measurements Commute \
with First and Last Measurement, but not each necessarily each other\
\>", "Subsubsection",
 CellChangeTimes->{{3.7482086927409697`*^9, 3.7482086955062675`*^9}, {
  3.748364009074464*^9, 3.748364040890907*^9}, {3.7483640725006056`*^9, 
  3.7483641201742144`*^9}, {3.748791314048701*^9, 3.748791315480818*^9}}],

Cell[TextData[{
 "The final example we give is a more general quantum sequence of \
measurements. Consider a sequence of measurements of the form;\n\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "0"], TraditionalForm]]],
 StyleBox[" ", "DisplayFormula"],
 "\[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "1"], TraditionalForm]]],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "2"], TraditionalForm]]],
 " \[Rule] .... \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "N"], TraditionalForm]]],
 " \[Rule] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "0"], TraditionalForm]]],
 "\n\nWhere [",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "0"], TraditionalForm]]],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "i"], TraditionalForm]]],
 "] = 0, \[ForAll]i \[Element]{1,N} , but two intermediary measurements ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "i"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["M", "j"], TraditionalForm]]],
 " do not necessarily commute.\n\nQuantum theory tells us that the outcome of \
the first and last measurement should be the same.\n\nIn this section we show \
that the model reproduces any sequence of such measurements. To do so first \
we choose an arbitary stabilizer measurement and generate the set of \
measurements that commute with it;"
}], "Text",
 CellChangeTimes->{{3.748869195447896*^9, 3.748869202315668*^9}, {
  3.7489631392915316`*^9, 3.748963219023751*^9}, {3.748963258624672*^9, 
  3.748963366540184*^9}, {3.748963423699882*^9, 3.748963522830528*^9}, {
  3.748963597962212*^9, 3.7489636539170823`*^9}, {3.748963738722709*^9, 
  3.748963773454793*^9}, {3.748965193025508*^9, 3.7489652091204395`*^9}, {
  3.748965775478709*^9, 3.748965815581725*^9}, {3.7489668114766836`*^9, 
  3.74896683174476*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InitMmt", " ", "=", " ", "\"\<ZZ\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InitMmtBS", " ", "=", 
   RowBox[{"PauliDict", "[", "InitMmt", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InitMmtTup", " ", "=", " ", 
    RowBox[{"BS2Tup", "[", "InitMmtBS", "]"}]}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Generate", " ", "Possible", " ", "Commuting", " ", "Measurements"}], ",",
     " ", 
    RowBox[{"removing", " ", "the", " ", "identity"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CommutingMmtsTup", " ", "=", " ", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"GenerateCommutingSubset", "[", 
       RowBox[{"InitMmtTup", ",", "ProjPauliTups"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Show", " ", "Possible", " ", "Measurements"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CommutingMmts", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"PositionIndex", "[", "PauliDict", "]"}], "[", 
      RowBox[{"Tup2BS", "[", "M", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"M", ",", "CommutingMmtsTup"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7489668368689475`*^9, 3.7489668507481055`*^9}, {
   3.7489669022894115`*^9, 3.7489670002690935`*^9}, {3.7489670372977333`*^9, 
   3.7489671008176184`*^9}, {3.7489877140723658`*^9, 
   3.7489878201680546`*^9}, {3.7489878675188956`*^9, 
   3.7489878906006813`*^9}, {3.748987929100973*^9, 3.7489879389339175`*^9}, {
   3.7489880423132553`*^9, 3.748988075243492*^9}, {3.7489881846701555`*^9, 
   3.748988190521553*^9}, {3.7489882741780357`*^9, 3.7489883070872917`*^9}, 
   3.748990664481957*^9, {3.7489912740627203`*^9, 3.74899127424261*^9}}],

Cell["\<\
Next we will generate an arbitrary measurement sequence of a length specified \
by the parameter n (note: repeated measurements may be included);\
\>", "Text",
 CellChangeTimes->{{3.748988201516812*^9, 3.7489882438517127`*^9}, {
  3.7489885401703844`*^9, 3.748988552113078*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", " ", "=", " ", "100"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomMmt", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomChoice", "[", "CommutingMmts", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomCircuit", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\"\<M\>\"", ",", "False", ",", 
       RowBox[{"{", 
        RowBox[{"{", "InitMmt", "}"}], "}"}]}], "}"}], "}"}], "~", "Join", 
    "~", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<M\>\"", ",", "False", ",", 
        RowBox[{"{", "RM", "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"RM", ",", " ", "RandomMmt"}], "}"}]}], "]"}], "~", "Join", 
    "~", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"\"\<M\>\"", ",", "False", ",", 
       RowBox[{"{", 
        RowBox[{"{", "InitMmt", "}"}], "}"}]}], "}"}], "}"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.748988244999005*^9, 3.7489882566758146`*^9}, {
   3.7489883174469123`*^9, 3.7489883663223457`*^9}, {3.7489884163625298`*^9, 
   3.748988523911397*^9}, 3.7489886234670897`*^9, {3.7489907390410433`*^9, 
   3.7489907466223745`*^9}, {3.7489909276164837`*^9, 
   3.7489909346711392`*^9}, {3.7489912800720205`*^9, 3.7489912805427303`*^9}, 
   3.748991445621073*^9, {3.7489914865128913`*^9, 3.74899151438173*^9}, {
   3.7490944787759314`*^9, 3.7490944817104335`*^9}}],

Cell["\<\
Finally due to the code structure we are required to input a stabilizer state \
(or Identity state). 

Firstly, the maximally mixed state;\
\>", "Text",
 CellChangeTimes->{{3.748988634476311*^9, 3.7489886759637628`*^9}, {
  3.7489888839127064`*^9, 3.7489889347893763`*^9}, {3.7489891417460203`*^9, 
  3.748989180884919*^9}, {3.748989217284532*^9, 3.748989236720563*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"StabIn", " ", "=", " ", 
   RowBox[{"{", "\"\<II\>\"", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7489889368391137`*^9, 3.7489889932928686`*^9}, {
   3.7489890509504004`*^9, 3.74898911087403*^9}, 3.748990617051165*^9, 
   3.7508011007073154`*^9}],

Cell["Secondly, a specified stabilizer state;", "Text",
 CellChangeTimes->{{3.7489891176628513`*^9, 3.7489891760129175`*^9}, {
  3.748989228159835*^9, 3.7489892315197678`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"StabIn", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"\"\<ZI\>\"", ",", "\"\<IZ\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7489891830086102`*^9, 3.748989196435342*^9}, 
   3.748990620874811*^9}],

Cell["\<\
Finally a random stabilizer state (note the identity state is operationally \
equivalent to the below code, but functionally different), we output the \
stabilizer state for clarity;\
\>", "Text",
 CellChangeTimes->{{3.748989208289071*^9, 3.748989210177908*^9}, {
  3.748989240474258*^9, 3.748989277514441*^9}, {3.748990027859543*^9, 
  3.7489900449010487`*^9}, {3.748990637652479*^9, 3.7489906463651133`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ProjGen1", " ", "=", " ", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{"ProjPauliStr", "\[LeftDoubleBracket]", 
     RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gen1", " ", "=", " ", 
    RowBox[{"RandomChoice", "[", 
     RowBox[{"{", 
      RowBox[{"ProjGen1", ",", 
       RowBox[{"\"\<-\>\"", "<>", "ProjGen1"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProjGen1BS", " ", "=", 
   RowBox[{"PauliDict", "[", "ProjGen1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ProjGen1Tup", " ", "=", " ", 
    RowBox[{"BS2Tup", "[", "ProjGen1BS", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Generate", " ", "commuting", " ", "set", " ", "of", " ", "generators"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CommutingGen1Tup", " ", "=", 
   RowBox[{"DeleteCases", "[", " ", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{
       RowBox[{"GenerateCommutingSubset", "[", 
        RowBox[{"ProjGen1Tup", ",", "ProjPauliTups"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
     "ProjGen1Tup"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CommutingGen1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PositionIndex", "[", "PauliDict", "]"}], "[", 
       RowBox[{"Tup2BS", "[", "S", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"S", ",", "CommutingGen1Tup"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProjGen2", " ", "=", " ", 
   RowBox[{"RandomChoice", "[", "CommutingGen1", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gen2", " ", "=", " ", 
    RowBox[{"RandomChoice", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "ProjGen2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"\"\<-\>\"", "<>", "ProjGen2"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"StabIn", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"Gen1", ",", "Gen2"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.74898927884862*^9, 3.7489892795142097`*^9}, {
  3.748990048300955*^9, 3.7489902198244658`*^9}, {3.748990263491576*^9, 
  3.7489903344489126`*^9}, {3.748990371657524*^9, 3.74899052975241*^9}, {
  3.7489905744573946`*^9, 3.7489905938754373`*^9}}],

Cell["\<\
Finally we execute the circuit, and check the first outcome is equal to the \
last;\
\>", "Text",
 CellChangeTimes->{{3.7489906483518953`*^9, 3.7489906548818693`*^9}, {
  3.7489908740294557`*^9, 3.7489908842891383`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RandomCircuitStabIn", "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"{", "StabIn", "}"}], "}"}], "}"}], "~", "Join", "~", 
     "RandomCircuit"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Output", " ", "=", " ", 
    RowBox[{"RunCircuit", "[", "RandomCircuitStabIn", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"TrueQ", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Output", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "\[Equal]", 
   RowBox[{
    RowBox[{"Output", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7489906244056373`*^9, 3.7489906251072054`*^9}, {
   3.7489906937529316`*^9, 3.748990709781061*^9}, 3.7489907994098682`*^9, {
   3.7489908355696*^9, 3.7489908556482353`*^9}, {3.74899088769704*^9, 
   3.74899091987525*^9}}],

Cell["\<\
Finally for the short enough sequences we can watch the ontic state evolve \
through the measurement sequence. Firstly we print the first measurement \
performed, and the first and last ontic state to demonstrate the updates. \
After we print the full ontic updates, raw, note how the initially measured \
observable\[CloseCurlyQuote]s cell stays constant throughout sequence;\
\>", "Text",
 CellChangeTimes->{{3.748990971111698*^9, 3.748991021654574*^9}, {
  3.7489911011995907`*^9, 3.7489911669491205`*^9}, {3.748991198363287*^9, 
  3.7489912543478613`*^9}, {3.750797743405699*^9, 3.7507977621511755`*^9}}],

Cell[BoxData[{
 RowBox[{"InitMmt", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"FiniteStatePauli", "[", 
    RowBox[{
     RowBox[{"Output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
      "\[LeftDoubleBracket]", 
     RowBox[{"1", ";;"}], "\[RightDoubleBracket]"}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"FiniteStateRaw", "[", 
  RowBox[{
   RowBox[{"Output", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"1", ";;"}], "\[RightDoubleBracket]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7489910233805113`*^9, 3.7489910859669704`*^9}, {
  3.7489911864950647`*^9, 3.748991226489016*^9}, {3.750563542912592*^9, 
  3.7505635443397107`*^9}, {3.750563601964162*^9, 3.7505636069540834`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
CellContext->Notebook,
ShowCellTags->True,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SubHeader"->{
  Cell[3792, 89, 150, 2, 63, "Subsection",
   CellTags->"SubHeader"],
  Cell[3945, 93, 11489, 322, 406, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[15471, 420, 131, 2, 55, "Subsection",
   CellTags->"SubHeader"],
  Cell[15605, 424, 295, 6, 44, "Text",
   CellTags->"SubHeader"],
  Cell[15903, 432, 24913, 647, 957, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[41826, 1109, 169, 2, 63, "Subsection",
   CellTags->"SubHeader"],
  Cell[41998, 1113, 2828, 74, 178, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[46468, 1235, 166, 2, 63, "Subsection",
   CellTags->"SubHeader"],
  Cell[46637, 1239, 5450, 147, 197, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[55497, 1521, 142, 2, 63, "Subsection",
   CellTags->"SubHeader"],
  Cell[55642, 1525, 802, 19, 154, "Text",
   CellTags->"SubHeader"],
  Cell[56447, 1546, 7138, 179, 145, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[63622, 1730, 221, 3, 55, "Subsection",
   CellTags->"SubHeader"],
  Cell[63846, 1735, 267, 6, 44, "Text",
   CellTags->"SubHeader"],
  Cell[64116, 1743, 2518, 65, 106, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[67962, 1849, 196, 3, 53, "Subsubsection",
   CellTags->"SubHeader"],
  Cell[68161, 1854, 2010, 50, 160, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[70208, 1909, 195, 3, 47, "Subsubsection",
   CellTags->"SubHeader"],
  Cell[70406, 1914, 4464, 115, 311, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[74907, 2034, 194, 3, 47, "Subsubsection",
   CellTags->"SubHeader"],
  Cell[75104, 2039, 4419, 117, 336, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[79560, 2161, 196, 3, 47, "Subsubsection",
   CellTags->"SubHeader"],
  Cell[79759, 2166, 6060, 157, 311, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[86273, 2341, 174, 3, 53, "Subsubsection",
   CellTags->"SubHeader"],
  Cell[86450, 2346, 607, 16, 84, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[87094, 2367, 162, 2, 47, "Subsubsection",
   CellTags->"SubHeader"],
  Cell[87259, 2371, 1541, 39, 135, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[89808, 2438, 158, 2, 63, "Subsection",
   CellTags->"SubHeader"],
  Cell[89969, 2442, 154, 2, 57, "Text",
   CellTags->"SubHeader"],
  Cell[90126, 2446, 10099, 259, 792, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[100262, 2710, 159, 2, 55, "Subsection",
   CellTags->"SubHeader"],
  Cell[100424, 2714, 1579, 29, 310, "Text",
   CellTags->"SubHeader"],
  Cell[102006, 2745, 26043, 644, 1052, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[132173, 3464, 251, 4, 63, "Subsection",
   CellTags->"SubHeader"],
  Cell[132427, 3470, 8182, 219, 406, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[140646, 3694, 134, 2, 55, "Subsection",
   CellTags->"SubHeader"],
  Cell[140783, 3698, 4657, 120, 425, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[145477, 3823, 163, 3, 55, "Subsection",
   CellTags->"SubHeader"],
  Cell[145643, 3828, 17934, 414, 1071, "Input",
   CellTags->{"Core", "SubHeader"}]},
 "Core"->{
  Cell[3945, 93, 11489, 322, 406, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[15903, 432, 24913, 647, 957, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[41998, 1113, 2828, 74, 178, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[46637, 1239, 5450, 147, 197, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[56447, 1546, 7138, 179, 145, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[64116, 1743, 2518, 65, 106, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[68161, 1854, 2010, 50, 160, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[70406, 1914, 4464, 115, 311, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[75104, 2039, 4419, 117, 336, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[79759, 2166, 6060, 157, 311, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[86450, 2346, 607, 16, 84, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[87259, 2371, 1541, 39, 135, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[90126, 2446, 10099, 259, 792, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[102006, 2745, 26043, 644, 1052, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[132427, 3470, 8182, 219, 406, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[140783, 3698, 4657, 120, 425, "Input",
   CellTags->{"Core", "SubHeader"}],
  Cell[145643, 3828, 17934, 414, 1071, "Input",
   CellTags->{"Core", "SubHeader"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SubHeader", 214681, 5546},
 {"Core", 217686, 5625}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 612, 10, 101, "Title"],
Cell[CellGroupData[{
Cell[1217, 36, 152, 2, 70, "Section"],
Cell[1372, 40, 1923, 31, 163, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3332, 76, 218, 3, 70, "Section"],
Cell[3553, 81, 214, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[3792, 89, 150, 2, 63, "Subsection",
 CellTags->"SubHeader"],
Cell[3945, 93, 11489, 322, 406, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]],
Cell[CellGroupData[{
Cell[15471, 420, 131, 2, 55, "Subsection",
 CellTags->"SubHeader"],
Cell[15605, 424, 295, 6, 44, "Text",
 CellTags->"SubHeader"],
Cell[15903, 432, 24913, 647, 957, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40865, 1085, 104, 1, 70, "Section"],
Cell[40972, 1088, 829, 17, 144, "Text"],
Cell[CellGroupData[{
Cell[41826, 1109, 169, 2, 63, "Subsection",
 CellTags->"SubHeader"],
Cell[41998, 1113, 2828, 74, 178, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44875, 1193, 165, 2, 70, "Section"],
Cell[45043, 1197, 1400, 34, 353, "Text"],
Cell[CellGroupData[{
Cell[46468, 1235, 166, 2, 63, "Subsection",
 CellTags->"SubHeader"],
Cell[46637, 1239, 5450, 147, 197, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52136, 1392, 117, 1, 70, "Section"],
Cell[52256, 1395, 251, 5, 49, "Text"],
Cell[52510, 1402, 1664, 73, 27, "InlineFormula"],
Cell[54177, 1477, 302, 7, 68, "Text"],
Cell[54482, 1486, 901, 28, 69, "Input"],
Cell[55386, 1516, 86, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[55497, 1521, 142, 2, 63, "Subsection",
 CellTags->"SubHeader"],
Cell[55642, 1525, 802, 19, 154, "Text",
 CellTags->"SubHeader"],
Cell[56447, 1546, 7138, 179, 145, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]],
Cell[CellGroupData[{
Cell[63622, 1730, 221, 3, 55, "Subsection",
 CellTags->"SubHeader"],
Cell[63846, 1735, 267, 6, 44, "Text",
 CellTags->"SubHeader"],
Cell[64116, 1743, 2518, 65, 106, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66683, 1814, 157, 2, 70, "Section"],
Cell[66843, 1818, 285, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[67153, 1827, 122, 1, 49, "Subsection"],
Cell[67278, 1830, 659, 15, 163, "Text"],
Cell[CellGroupData[{
Cell[67962, 1849, 196, 3, 53, "Subsubsection",
 CellTags->"SubHeader"],
Cell[68161, 1854, 2010, 50, 160, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]],
Cell[CellGroupData[{
Cell[70208, 1909, 195, 3, 47, "Subsubsection",
 CellTags->"SubHeader"],
Cell[70406, 1914, 4464, 115, 311, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]],
Cell[CellGroupData[{
Cell[74907, 2034, 194, 3, 47, "Subsubsection",
 CellTags->"SubHeader"],
Cell[75104, 2039, 4419, 117, 336, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]],
Cell[CellGroupData[{
Cell[79560, 2161, 196, 3, 47, "Subsubsection",
 CellTags->"SubHeader"],
Cell[79759, 2166, 6060, 157, 311, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85868, 2329, 117, 1, 49, "Subsection"],
Cell[85988, 2332, 260, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[86273, 2341, 174, 3, 53, "Subsubsection",
 CellTags->"SubHeader"],
Cell[86450, 2346, 607, 16, 84, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]],
Cell[CellGroupData[{
Cell[87094, 2367, 162, 2, 47, "Subsubsection",
 CellTags->"SubHeader"],
Cell[87259, 2371, 1541, 39, 135, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88861, 2417, 130, 1, 70, "Section"],
Cell[88994, 2420, 789, 14, 106, "Text"],
Cell[CellGroupData[{
Cell[89808, 2438, 158, 2, 63, "Subsection",
 CellTags->"SubHeader"],
Cell[89969, 2442, 154, 2, 57, "Text",
 CellTags->"SubHeader"],
Cell[90126, 2446, 10099, 259, 792, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]],
Cell[CellGroupData[{
Cell[100262, 2710, 159, 2, 55, "Subsection",
 CellTags->"SubHeader"],
Cell[100424, 2714, 1579, 29, 310, "Text",
 CellTags->"SubHeader"],
Cell[102006, 2745, 26043, 644, 1052, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128098, 3395, 101, 1, 70, "Section"],
Cell[128202, 3398, 3946, 62, 714, "Text"],
Cell[CellGroupData[{
Cell[132173, 3464, 251, 4, 63, "Subsection",
 CellTags->"SubHeader"],
Cell[132427, 3470, 8182, 219, 406, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]],
Cell[CellGroupData[{
Cell[140646, 3694, 134, 2, 55, "Subsection",
 CellTags->"SubHeader"],
Cell[140783, 3698, 4657, 120, 425, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]],
Cell[CellGroupData[{
Cell[145477, 3823, 163, 3, 55, "Subsection",
 CellTags->"SubHeader"],
Cell[145643, 3828, 17934, 414, 1071, "Input",
 CellTags->{"Core", "SubHeader"}]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163626, 4248, 110, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[163761, 4253, 230, 3, 49, "Subsection"],
Cell[163994, 4258, 549, 11, 68, "Text"],
Cell[164546, 4271, 2012, 43, 202, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166595, 4319, 96, 1, 49, "Subsection"],
Cell[166694, 4322, 168, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[166887, 4329, 182, 2, 39, "Subsubsection"],
Cell[167072, 4333, 230, 4, 30, "Text"],
Cell[167305, 4339, 6419, 160, 222, "Input"],
Cell[173727, 4501, 393, 8, 49, "Text"],
Cell[174123, 4511, 175, 3, 30, "Input"],
Cell[174301, 4516, 178, 4, 30, "Text"],
Cell[174482, 4522, 172, 3, 30, "Input"],
Cell[174657, 4527, 175, 4, 30, "Text"],
Cell[174835, 4533, 173, 3, 30, "Input"],
Cell[175011, 4538, 349, 6, 30, "Text"],
Cell[175363, 4546, 424, 10, 50, "Input"],
Cell[175790, 4558, 379, 7, 30, "Text"],
Cell[176172, 4567, 596, 10, 50, "Input"],
Cell[176771, 4579, 1271, 21, 182, "Text"],
Cell[178045, 4602, 205, 4, 30, "Text"],
Cell[178253, 4608, 489, 10, 69, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[178779, 4623, 181, 2, 33, "Subsubsection"],
Cell[178963, 4627, 976, 16, 87, "Text"],
Cell[179942, 4645, 1063, 24, 164, "Input"],
Cell[181008, 4671, 205, 4, 30, "Text"],
Cell[181216, 4677, 683, 15, 126, "Input"],
Cell[181902, 4694, 376, 7, 30, "Text"],
Cell[182281, 4703, 1064, 26, 88, "Input"],
Cell[183348, 4731, 484, 10, 68, "Text"],
Cell[183835, 4743, 299, 5, 30, "Input"],
Cell[184137, 4750, 155, 3, 30, "Text"],
Cell[184295, 4755, 587, 16, 30, "Input"],
Cell[184885, 4773, 342, 6, 30, "Text"],
Cell[185230, 4781, 1475, 33, 88, "Input"],
Cell[186708, 4816, 601, 10, 68, "Text"],
Cell[187312, 4828, 4865, 123, 335, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[192214, 4956, 192, 2, 33, "Subsubsection"],
Cell[192409, 4960, 2940, 70, 462, "Text"],
Cell[195352, 5032, 959, 25, 107, "Input"],
Cell[196314, 5059, 129, 1, 30, "Text"],
Cell[196446, 5062, 1429, 36, 107, "Input"],
Cell[197878, 5100, 380, 7, 30, "Text"],
Cell[198261, 5109, 1091, 25, 88, "Input"],
Cell[199355, 5136, 192, 4, 30, "Text"],
Cell[199550, 5142, 1555, 38, 107, "Input"],
Cell[201108, 5182, 170, 3, 30, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[201315, 5190, 398, 6, 33, "Subsubsection"],
Cell[201716, 5198, 1834, 51, 185, "Text"],
Cell[203553, 5251, 1972, 49, 164, "Input"],
Cell[205528, 5302, 288, 5, 30, "Text"],
Cell[205819, 5309, 1601, 42, 107, "Input"],
Cell[207423, 5353, 380, 8, 68, "Text"],
Cell[207806, 5363, 286, 6, 30, "Input"],
Cell[208095, 5371, 176, 2, 30, "Text"],
Cell[208274, 5375, 243, 6, 30, "Input"],
Cell[208520, 5383, 420, 7, 30, "Text"],
Cell[208943, 5392, 2616, 71, 278, "Input"],
Cell[211562, 5465, 230, 5, 30, "Text"],
Cell[211795, 5472, 1096, 27, 107, "Input"],
Cell[212894, 5501, 618, 9, 49, "Text"],
Cell[213515, 5512, 772, 16, 69, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

